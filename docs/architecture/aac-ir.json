{
  "version": "1.0",
  "system": {
    "description": "Main application container",
    "name": "Application"
  },
  "actors": [
    {
      "description": "End user who runs archlette commands",
      "tags": [],
      "id": "user",
      "name": "User",
      "type": "Person",
      "targets": [
        "default-container__cli"
      ]
    },
    {
      "description": "File system for reading and writing files",
      "tags": [],
      "id": "filesystem",
      "name": "FileSystem",
      "type": "System",
      "targets": []
    },
    {
      "description": "The github repo hosting the Structurizr CLI releases. https://github.com/structurizr/cli/releases/download/v${TOOL_VERSIONS.structurizr}/structurizr-cli.zip",
      "tags": [],
      "id": "github-structurizr-repo",
      "name": "Github Structurizr Repo",
      "type": "System",
      "targets": []
    },
    {
      "description": "The github repo hosting the PlantUML CLI releases. https://github.com/plantuml/plantuml/releases/download/v${TOOL_VERSIONS.plantuml}/plantuml-${TOOL_VERSIONS.plantuml}.jar",
      "tags": [],
      "id": "github-plantuml-repo",
      "name": "Github PlantUML Repo",
      "type": "System",
      "targets": []
    },
    {
      "description": "The zip extraction utility on the local system (unzip on Unix, Expand-Archive on Windows).",
      "tags": [],
      "id": "local-systems-unzip-utility",
      "name": "Local System's unzip utility",
      "type": "System",
      "targets": []
    },
    {
      "description": "The local file system for caching downloaded tools.",
      "tags": [],
      "id": "file-system",
      "name": "File System",
      "type": "System",
      "targets": []
    }
  ],
  "containers": [
    {
      "description": "Main application container",
      "tags": [
        "Auto-generated"
      ],
      "id": "default-container",
      "name": "Application",
      "type": "Application",
      "layer": "Application"
    }
  ],
  "components": [
    {
      "description": "Archlette CLI - Architecture-as-Code toolkit",
      "id": "default-container__cli",
      "containerId": "default-container",
      "name": "CLI",
      "type": "module"
    },
    {
      "description": "ArchletteIR aggregation utilities | Extraction stage of the AAC pipeline | TypeScript/JavaScript code extractor | Cloudflare Wrangler deployment extractor",
      "id": "default-container__extractors",
      "containerId": "default-container",
      "name": "extractors",
      "type": "module"
    },
    {
      "description": "Validation stage of the AAC pipeline | Base IR validator for Archlette pipeline",
      "id": "default-container__validators",
      "containerId": "default-container",
      "name": "validators",
      "type": "module"
    },
    {
      "description": "Generation stage of the AAC pipeline | Structurizr DSL Generator (Template-based)",
      "id": "default-container__generators",
      "containerId": "default-container",
      "name": "generators",
      "type": "module"
    },
    {
      "description": "Render stage of the AAC pipeline | PlantUML image renderer | Structurizr DSL export renderer",
      "id": "default-container__renderers",
      "containerId": "default-container",
      "name": "renderers",
      "type": "module"
    },
    {
      "description": "Documentation stage of the AAC pipeline | Markdown documentation generator",
      "id": "default-container__docs",
      "containerId": "default-container",
      "name": "docs",
      "type": "module"
    },
    {
      "description": "Dynamic ESM module loader | Stage module interfaces for the AAC pipeline | Stage module loaders | Tool management for external rendering tools | Architecture-as-Code (AAC) configuration types and schemas | Archlette Intermediate Representation (IR) types and schemas | Core pipeline types",
      "id": "default-container__core",
      "containerId": "default-container",
      "name": "core",
      "type": "module"
    }
  ],
  "code": [
    {
      "id": "default-container__cli__usageAndExit",
      "componentId": "default-container__cli",
      "name": "CLI__usageAndExit",
      "type": "function",
      "returnType": "void",
      "parameters": [
        {
          "name": "msg",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/cli.ts",
      "lineNumber": 69
    },
    {
      "id": "default-container__cli__parseArgs",
      "componentId": "default-container__cli",
      "name": "CLI__parseArgs",
      "type": "function",
      "returnType": "{ stageArg: string; yamlPathArg: any; }",
      "parameters": [
        {
          "name": "argv",
          "type": "string[]",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/cli.ts",
      "lineNumber": 91
    },
    {
      "id": "default-container__cli__stageListFromArg",
      "componentId": "default-container__cli",
      "name": "CLI__stageListFromArg",
      "type": "function",
      "returnType": "string[]",
      "parameters": [
        {
          "name": "stageArg",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/cli.ts",
      "lineNumber": 124
    },
    {
      "id": "default-container__cli__loadYamlIfExists",
      "componentId": "default-container__cli",
      "name": "CLI__loadYamlIfExists",
      "type": "function",
      "returnType": "Promise<{ config: any; path: string; }>",
      "parameters": [
        {
          "name": "resolvedFile",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/cli.ts",
      "lineNumber": 130
    },
    {
      "id": "default-container__cli__run",
      "componentId": "default-container__cli",
      "name": "CLI__run",
      "type": "function",
      "returnType": "Promise<void>",
      "parameters": [
        {
          "name": "argv",
          "type": "string[]",
          "optional": true,
          "defaultValue": "process.argv"
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/cli.ts",
      "lineNumber": 150
    },
    {
      "description": "Aggregate multiple ArchletteIR objects into a single unified IR",
      "id": "default-container__extractors__aggregateIRs",
      "componentId": "default-container__extractors",
      "name": "extractors__aggregateIRs",
      "type": "function",
      "documentation": {
        "summary": "Aggregate multiple ArchletteIR objects into a single unified IR",
        "examples": [
          "```typescript\nconst results = [ir1, ir2, ir3];\nconst merged = aggregateIRs(results);\n// merged contains all unique elements from all three IRs\n```"
        ],
        "remarks": [
          "- If the input array is empty, returns a minimal valid IR\n- System metadata is taken from the first IR\n- Elements are deduplicated by ID (first occurrence wins)\n- Relationships are deduplicated by source+destination+stereotype combination"
        ]
      },
      "returnType": "z.infer<any>",
      "returnDescription": "A single aggregated ArchletteIR with deduplicated elements",
      "parameters": [
        {
          "name": "irs",
          "type": "z.infer<any>[]",
          "description": "- Array of ArchletteIR objects to merge",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/1-extract/aggregator.ts",
      "lineNumber": 47
    },
    {
      "description": "Deduplicate array of entities by their ID field",
      "id": "default-container__extractors__deduplicateById",
      "componentId": "default-container__extractors",
      "name": "extractors__deduplicateById",
      "type": "function",
      "documentation": {
        "summary": "Deduplicate array of entities by their ID field",
        "remarks": [
          "When duplicate IDs are found, their descriptions are concatenated with ' | ' separator.\nDuplicate descriptions are automatically filtered out."
        ]
      },
      "returnType": "T[]",
      "returnDescription": "Array with duplicates removed (first occurrence preserved, descriptions merged)",
      "parameters": [
        {
          "name": "items",
          "type": "T[]",
          "description": "- Array of entities with id property",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/1-extract/aggregator.ts",
      "lineNumber": 104
    },
    {
      "description": "Deduplicate array of entities by their name field",
      "id": "default-container__extractors__deduplicateByName",
      "componentId": "default-container__extractors",
      "name": "extractors__deduplicateByName",
      "type": "function",
      "documentation": {
        "summary": "Deduplicate array of entities by their name field",
        "remarks": [
          "When duplicate names are found, their descriptions are concatenated with ' | ' separator.\nDuplicate descriptions are automatically filtered out."
        ]
      },
      "returnType": "T[]",
      "returnDescription": "Array with duplicates removed (first occurrence preserved, descriptions merged)",
      "parameters": [
        {
          "name": "items",
          "type": "T[]",
          "description": "- Array of entities with name property",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/1-extract/aggregator.ts",
      "lineNumber": 142
    },
    {
      "description": "Deduplicate relationships by source+destination+stereotype combination",
      "id": "default-container__extractors__deduplicateRelationships",
      "componentId": "default-container__extractors",
      "name": "extractors__deduplicateRelationships",
      "type": "function",
      "documentation": {
        "summary": "Deduplicate relationships by source+destination+stereotype combination",
        "remarks": [
          "Two relationships are considered duplicates if they have the same:\n- source ID\n- destination ID\n- stereotype (undefined stereotypes are treated as distinct from defined ones)\nThe first occurrence is preserved, including its description.\nThis allows multiple relationships between the same elements with different stereotypes."
        ]
      },
      "returnType": "z.infer<any>[]",
      "returnDescription": "Array with duplicate relationships removed",
      "parameters": [
        {
          "name": "relationships",
          "type": "z.infer<any>[]",
          "description": "- Array of relationships to deduplicate",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/1-extract/aggregator.ts",
      "lineNumber": 184
    },
    {
      "description": "Execute the extraction stage",
      "id": "default-container__extractors__run",
      "componentId": "default-container__extractors",
      "name": "extractors__run",
      "type": "function",
      "documentation": {
        "summary": "Execute the extraction stage"
      },
      "returnType": "Promise<void>",
      "parameters": [
        {
          "name": "ctx",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").PipelineContext",
          "description": "- Pipeline context with configuration and logging",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/1-extract/index.ts",
      "lineNumber": 39
    },
    {
      "description": "Execute the validation stage",
      "id": "default-container__validators__run",
      "componentId": "default-container__validators",
      "name": "validators__run",
      "type": "function",
      "documentation": {
        "summary": "Execute the validation stage"
      },
      "returnType": "Promise<void>",
      "parameters": [
        {
          "name": "ctx",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").PipelineContext",
          "description": "- Pipeline context with configuration, logging, and aggregated IR",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/2-validate/index.ts",
      "lineNumber": 38
    },
    {
      "description": "Execute the generation stage",
      "id": "default-container__generators__run",
      "componentId": "default-container__generators",
      "name": "generators__run",
      "type": "function",
      "documentation": {
        "summary": "Execute the generation stage"
      },
      "returnType": "Promise<void>",
      "parameters": [
        {
          "name": "ctx",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").PipelineContext",
          "description": "- Pipeline context with configuration, logging, and validated IR",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/3-generate/index.ts",
      "lineNumber": 36
    },
    {
      "description": "Execute the rendering stage",
      "id": "default-container__renderers__run",
      "componentId": "default-container__renderers",
      "name": "renderers__run",
      "type": "function",
      "documentation": {
        "summary": "Execute the rendering stage"
      },
      "returnType": "Promise<void>",
      "parameters": [
        {
          "name": "ctx",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").PipelineContext",
          "description": "- Pipeline context with configuration, logging, and DSL file location",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/4-render/index.ts",
      "lineNumber": 36
    },
    {
      "description": "Execute the documentation stage",
      "id": "default-container__docs__run",
      "componentId": "default-container__docs",
      "name": "docs__run",
      "type": "function",
      "documentation": {
        "summary": "Execute the documentation stage"
      },
      "returnType": "Promise<void>",
      "parameters": [
        {
          "name": "ctx",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").PipelineContext",
          "description": "- Pipeline context with configuration, logging, IR, and rendered diagrams",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/5-docs/index.ts",
      "lineNumber": 35
    },
    {
      "description": "Convert a name to a normalized ID\nUsed for consistent ID generation across extractors and mappers",
      "id": "default-container__core__nameToId",
      "componentId": "default-container__core",
      "name": "core__nameToId",
      "type": "function",
      "documentation": {
        "summary": "Convert a name to a normalized ID\nUsed for consistent ID generation across extractors and mappers",
        "examples": [
          "nameToId('Payment Processor') // 'payment-processor'\nnameToId('payments/processor') // 'payments-processor'\nnameToId('PaymentService') // 'paymentservice'"
        ]
      },
      "returnType": "string",
      "returnDescription": "Normalized ID (lowercase, hyphenated, alphanumeric)",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "description": "- The name to convert (component, actor, etc.)",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/constants.ts",
      "lineNumber": 56
    },
    {
      "description": "Determine if we're in a TTY environment (for pretty printing)",
      "id": "default-container__core__isTTY",
      "componentId": "default-container__core",
      "name": "core__isTTY",
      "type": "function",
      "documentation": {
        "summary": "Determine if we're in a TTY environment (for pretty printing)"
      },
      "returnType": "boolean",
      "parameters": [],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/logger.ts",
      "lineNumber": 43
    },
    {
      "description": "Get default log level from environment or fallback to 'info'",
      "id": "default-container__core__getDefaultLogLevel",
      "componentId": "default-container__core",
      "name": "core__getDefaultLogLevel",
      "type": "function",
      "documentation": {
        "summary": "Get default log level from environment or fallback to 'info'"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/core/logger\").LogLevel",
      "parameters": [],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/logger.ts",
      "lineNumber": 50
    },
    {
      "description": "Create a Pino logger instance with optional pretty printing",
      "id": "default-container__core__createPinoLogger",
      "componentId": "default-container__core",
      "name": "core__createPinoLogger",
      "type": "function",
      "documentation": {
        "summary": "Create a Pino logger instance with optional pretty printing"
      },
      "returnType": "PinoLogger",
      "parameters": [
        {
          "name": "level",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/logger\").LogLevel",
          "optional": false
        },
        {
          "name": "pretty",
          "type": "boolean",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/logger.ts",
      "lineNumber": 66
    },
    {
      "description": "Create a logger instance",
      "id": "default-container__core__createLogger",
      "componentId": "default-container__core",
      "name": "core__createLogger",
      "type": "function",
      "documentation": {
        "summary": "Create a logger instance",
        "examples": [
          "```typescript\nconst log = createLogger({ context: 'Extract' });\nlog.info('Starting extraction...');\nlog.debug('Processing file', { filePath });\nlog.error('Failed to parse', { error });\n```"
        ]
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/core/logger\").Logger",
      "returnDescription": "Logger instance",
      "parameters": [
        {
          "name": "options",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/logger\").LoggerOptions",
          "description": "- Logger configuration",
          "optional": true,
          "defaultValue": "{}"
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/logger.ts",
      "lineNumber": 131
    },
    {
      "description": "Dynamically load an ESM module from a path or module specifier",
      "id": "default-container__core__loadModuleFromPath",
      "componentId": "default-container__core",
      "name": "core__loadModuleFromPath",
      "type": "function",
      "documentation": {
        "summary": "Dynamically load an ESM module from a path or module specifier",
        "examples": [
          "```typescript\n// Load with default extensions (.ts, .js)\nconst result = await loadModuleFromPath('utils/helper');\n\n// Load with specific extensions\nconst result = await loadModuleFromPath('config', ['.json', '.js']);\n```"
        ]
      },
      "returnType": "Promise<import(\"C:/Users/chris/git/archlette/src/core/module-loader\").LoadedModule<T>>",
      "returnDescription": "Promise resolving to loaded module with metadata",
      "parameters": [
        {
          "name": "spec",
          "type": "string",
          "description": "- Module specifier (relative path, absolute path, or ~/ path)",
          "optional": false
        },
        {
          "name": "exts",
          "type": "(\".ts\" | \".js\")[]",
          "description": "- File extensions to probe (in order of preference)",
          "optional": true,
          "defaultValue": "['.ts', '.js']"
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/core/module-loader.ts",
      "lineNumber": 62
    },
    {
      "id": "default-container__core__getCliDir",
      "componentId": "default-container__core",
      "name": "core__getCliDir",
      "type": "function",
      "returnType": "string",
      "parameters": [],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/path-resolver.ts",
      "lineNumber": 17
    },
    {
      "id": "default-container__core__expandTilde",
      "componentId": "default-container__core",
      "name": "core__expandTilde",
      "type": "function",
      "returnType": "string",
      "parameters": [
        {
          "name": "p",
          "type": "string",
          "optional": false
        },
        {
          "name": "homeDir",
          "type": "string",
          "optional": true,
          "defaultValue": "process.env.HOME || process.env.USERPROFILE || ''"
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/path-resolver.ts",
      "lineNumber": 24
    },
    {
      "description": "Core path resolver honoring Archlette rules (no file existence checks).\n- \"~\"  -> user home\n- \"/\"  -> absolute\n- else -> relative to CLI dir",
      "id": "default-container__core__resolveArchlettePath",
      "componentId": "default-container__core",
      "name": "core__resolveArchlettePath",
      "type": "function",
      "documentation": {
        "summary": "Core path resolver honoring Archlette rules (no file existence checks).\n- \"~\"  -> user home\n- \"/\"  -> absolute\n- else -> relative to CLI dir"
      },
      "returnType": "string",
      "parameters": [
        {
          "name": "input",
          "type": "string",
          "optional": false
        },
        {
          "name": "opts",
          "type": "{ cliDir: string; }",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/path-resolver.ts",
      "lineNumber": 42
    },
    {
      "description": "Resolve a module entry by probing:\n1) Exact path\n2) With extensions: .ts then .js\n3) If directory: index.ts then index.js",
      "id": "default-container__core__resolveModuleEntry",
      "componentId": "default-container__core",
      "name": "core__resolveModuleEntry",
      "type": "function",
      "documentation": {
        "summary": "Resolve a module entry by probing:\n1) Exact path\n2) With extensions: .ts then .js\n3) If directory: index.ts then index.js"
      },
      "returnType": "string",
      "parameters": [
        {
          "name": "input",
          "type": "string",
          "optional": false
        },
        {
          "name": "opts",
          "type": "{ cliDir: string; wantedExts?: (\".ts\" | \".js\")[]; }",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/path-resolver.ts",
      "lineNumber": 64
    },
    {
      "id": "default-container__core__toFileUrl",
      "componentId": "default-container__core",
      "name": "core__toFileUrl",
      "type": "function",
      "returnType": "string",
      "parameters": [
        {
          "name": "p",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/path-resolver.ts",
      "lineNumber": 100
    },
    {
      "description": "Write content to a file, creating parent directories if needed.",
      "id": "default-container__core__writeFile",
      "componentId": "default-container__core",
      "name": "core__writeFile",
      "type": "function",
      "documentation": {
        "summary": "Write content to a file, creating parent directories if needed."
      },
      "returnType": "void",
      "parameters": [
        {
          "name": "filename",
          "type": "string",
          "description": "- Absolute path to the file",
          "optional": false
        },
        {
          "name": "content",
          "type": "string",
          "description": "- Content to write",
          "optional": true,
          "defaultValue": "''"
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/path-resolver.ts",
      "lineNumber": 110
    },
    {
      "id": "C:/Users/chris/git/archlette/src/core/stage-entry.js:getStageEntry",
      "name": "getStageEntry",
      "type": "function",
      "returnType": "import(\"C:/Users/chris/git/archlette/src/core/stage-entry\").StageEntry",
      "parameters": [
        {
          "name": "mod",
          "type": "unknown",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/stage-entry.js",
      "lineNumber": 12
    },
    {
      "id": "default-container__core__loadExtractorModule",
      "componentId": "default-container__core",
      "name": "core__loadExtractorModule",
      "type": "function",
      "returnType": "Promise<{ entry: Function; resolved: string; }>",
      "parameters": [
        {
          "name": "modulePath",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/core/stage-module-loader.ts",
      "lineNumber": 13
    },
    {
      "id": "default-container__core__loadValidatorModule",
      "componentId": "default-container__core",
      "name": "core__loadValidatorModule",
      "type": "function",
      "returnType": "Promise<{ entry: Function; resolved: string; }>",
      "parameters": [
        {
          "name": "modulePath",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/core/stage-module-loader.ts",
      "lineNumber": 26
    },
    {
      "id": "default-container__core__loadGeneratorModule",
      "componentId": "default-container__core",
      "name": "core__loadGeneratorModule",
      "type": "function",
      "returnType": "Promise<{ entry: Function; resolved: string; }>",
      "parameters": [
        {
          "name": "modulePath",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/core/stage-module-loader.ts",
      "lineNumber": 39
    },
    {
      "id": "default-container__core__loadRendererModule",
      "componentId": "default-container__core",
      "name": "core__loadRendererModule",
      "type": "function",
      "returnType": "Promise<{ entry: Function; resolved: string; }>",
      "parameters": [
        {
          "name": "modulePath",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/core/stage-module-loader.ts",
      "lineNumber": 52
    },
    {
      "id": "default-container__core__loadDocModule",
      "componentId": "default-container__core",
      "name": "core__loadDocModule",
      "type": "function",
      "returnType": "Promise<{ entry: Function; resolved: string; }>",
      "parameters": [
        {
          "name": "modulePath",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/core/stage-module-loader.ts",
      "lineNumber": 65
    },
    {
      "description": "Get the Archlette cache directory",
      "id": "default-container__core__getCacheDir",
      "componentId": "default-container__core",
      "name": "core__getCacheDir",
      "type": "function",
      "documentation": {
        "summary": "Get the Archlette cache directory"
      },
      "returnType": "string",
      "parameters": [],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "lineNumber": 64
    },
    {
      "description": "Ensure cache directory exists",
      "id": "default-container__core__ensureCacheDir",
      "componentId": "default-container__core",
      "name": "core__ensureCacheDir",
      "type": "function",
      "documentation": {
        "summary": "Ensure cache directory exists"
      },
      "returnType": "string",
      "parameters": [],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "lineNumber": 72
    },
    {
      "description": "Check if a command exists in PATH",
      "id": "default-container__core__commandExistsInPath",
      "componentId": "default-container__core",
      "name": "core__commandExistsInPath",
      "type": "function",
      "documentation": {
        "summary": "Check if a command exists in PATH"
      },
      "returnType": "string",
      "parameters": [
        {
          "name": "command",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "lineNumber": 83
    },
    {
      "description": "Download a file from URL to destination",
      "id": "default-container__core__downloadFile",
      "componentId": "default-container__core",
      "name": "core__downloadFile",
      "type": "function",
      "documentation": {
        "summary": "Download a file from URL to destination"
      },
      "returnType": "Promise<void>",
      "parameters": [
        {
          "name": "url",
          "type": "string",
          "optional": false
        },
        {
          "name": "dest",
          "type": "string",
          "optional": false
        },
        {
          "name": "log",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/logger\").Logger",
          "optional": true
        }
      ],
      "visibility": "private",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "lineNumber": 102
    },
    {
      "description": "Extract a ZIP file (simple extraction for Structurizr CLI)",
      "id": "default-container__core__extractZip",
      "componentId": "default-container__core",
      "name": "core__extractZip",
      "type": "function",
      "documentation": {
        "summary": "Extract a ZIP file (simple extraction for Structurizr CLI)"
      },
      "returnType": "Promise<void>",
      "parameters": [
        {
          "name": "zipPath",
          "type": "string",
          "optional": false
        },
        {
          "name": "destDir",
          "type": "string",
          "optional": false
        },
        {
          "name": "log",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/logger\").Logger",
          "optional": true
        }
      ],
      "visibility": "private",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "lineNumber": 144
    },
    {
      "description": "Make file executable (Unix only)",
      "id": "default-container__core__makeExecutable",
      "componentId": "default-container__core",
      "name": "core__makeExecutable",
      "type": "function",
      "documentation": {
        "summary": "Make file executable (Unix only)"
      },
      "returnType": "void",
      "parameters": [
        {
          "name": "filePath",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "lineNumber": 171
    },
    {
      "description": "Download and install Structurizr CLI to cache",
      "id": "default-container__core__downloadStructurizr",
      "componentId": "default-container__core",
      "name": "core__downloadStructurizr",
      "type": "function",
      "documentation": {
        "summary": "Download and install Structurizr CLI to cache"
      },
      "returnType": "Promise<string>",
      "parameters": [
        {
          "name": "cacheDir",
          "type": "string",
          "optional": false
        },
        {
          "name": "log",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/logger\").Logger",
          "optional": true
        }
      ],
      "visibility": "private",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "lineNumber": 180
    },
    {
      "description": "Download and install PlantUML to cache",
      "id": "default-container__core__downloadPlantUML",
      "componentId": "default-container__core",
      "name": "core__downloadPlantUML",
      "type": "function",
      "documentation": {
        "summary": "Download and install PlantUML to cache"
      },
      "returnType": "Promise<string>",
      "parameters": [
        {
          "name": "cacheDir",
          "type": "string",
          "optional": false
        },
        {
          "name": "log",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/logger\").Logger",
          "optional": true
        }
      ],
      "visibility": "private",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "lineNumber": 218
    },
    {
      "description": "Find or download Structurizr CLI",
      "id": "default-container__core__findStructurizrCLI",
      "componentId": "default-container__core",
      "name": "core__findStructurizrCLI",
      "type": "function",
      "documentation": {
        "summary": "Find or download Structurizr CLI"
      },
      "returnType": "Promise<string>",
      "returnDescription": "Path to structurizr executable/script",
      "parameters": [
        {
          "name": "log",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/logger\").Logger",
          "description": "- Optional logger",
          "optional": true
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "lineNumber": 244
    },
    {
      "description": "Find or download PlantUML JAR",
      "id": "default-container__core__findPlantUML",
      "componentId": "default-container__core",
      "name": "core__findPlantUML",
      "type": "function",
      "documentation": {
        "summary": "Find or download PlantUML JAR"
      },
      "returnType": "Promise<string>",
      "returnDescription": "Path to plantuml.jar",
      "parameters": [
        {
          "name": "log",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/logger\").Logger",
          "description": "- Optional logger",
          "optional": true
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "lineNumber": 284
    },
    {
      "description": "Verify Java is available",
      "id": "default-container__core__checkJava",
      "componentId": "default-container__core",
      "name": "core__checkJava",
      "type": "function",
      "documentation": {
        "summary": "Verify Java is available"
      },
      "returnType": "string",
      "returnDescription": "Java version string if available, null otherwise",
      "parameters": [],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "lineNumber": 313
    },
    {
      "description": "Validate Java is installed (throw if not)",
      "id": "default-container__core__requireJava",
      "componentId": "default-container__core",
      "name": "core__requireJava",
      "type": "function",
      "documentation": {
        "summary": "Validate Java is installed (throw if not)"
      },
      "returnType": "void",
      "parameters": [],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "lineNumber": 334
    },
    {
      "description": "For each stage, resolve includes/excludes for each node:\n  - If node omits includes/excludes, inherit from defaults.",
      "id": "default-container__core__resolveConfig",
      "componentId": "default-container__core",
      "name": "core__resolveConfig",
      "type": "function",
      "documentation": {
        "summary": "For each stage, resolve includes/excludes for each node:\n  - If node omits includes/excludes, inherit from defaults."
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/core/types-aac\").ResolvedAACConfig",
      "parameters": [
        {
          "name": "raw",
          "type": "unknown",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/core/types-aac.ts",
      "lineNumber": 139
    },
    {
      "description": "Generate markdown documentation",
      "id": "default-container__docs__markdownDocs",
      "componentId": "default-container__docs",
      "name": "docs__markdownDocs",
      "type": "function",
      "documentation": {
        "summary": "Generate markdown documentation"
      },
      "returnType": "Promise<void>",
      "parameters": [
        {
          "name": "ctx",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").PipelineContext",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "lineNumber": 33
    },
    {
      "description": "Find diagram files for a specific view type",
      "id": "default-container__docs__findDiagramsForView",
      "componentId": "default-container__docs",
      "name": "docs__findDiagramsForView",
      "type": "function",
      "documentation": {
        "summary": "Find diagram files for a specific view type"
      },
      "returnType": "string[]",
      "parameters": [
        {
          "name": "rendererOutputs",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").RendererOutput[]",
          "optional": false
        },
        {
          "name": "diagramsDir",
          "type": "string",
          "optional": false
        },
        {
          "name": "docsDir",
          "type": "string",
          "optional": false
        },
        {
          "name": "viewType",
          "type": "string",
          "optional": false
        },
        {
          "name": "log",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/logger\").Logger",
          "optional": true
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "lineNumber": 213
    },
    {
      "description": "Find component diagrams for a specific component",
      "id": "default-container__docs__findDiagramsForComponent",
      "componentId": "default-container__docs",
      "name": "docs__findDiagramsForComponent",
      "type": "function",
      "documentation": {
        "summary": "Find component diagrams for a specific component"
      },
      "returnType": "string[]",
      "parameters": [
        {
          "name": "rendererOutputs",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").RendererOutput[]",
          "optional": false
        },
        {
          "name": "diagramsDir",
          "type": "string",
          "optional": false
        },
        {
          "name": "docsDir",
          "type": "string",
          "optional": false
        },
        {
          "name": "_component",
          "type": "z.infer<any>",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "lineNumber": 245
    },
    {
      "description": "Find class diagrams for a specific component",
      "id": "default-container__docs__findClassDiagramsForComponent",
      "componentId": "default-container__docs",
      "name": "docs__findClassDiagramsForComponent",
      "type": "function",
      "documentation": {
        "summary": "Find class diagrams for a specific component"
      },
      "returnType": "string[]",
      "parameters": [
        {
          "name": "rendererOutputs",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").RendererOutput[]",
          "optional": false
        },
        {
          "name": "diagramsDir",
          "type": "string",
          "optional": false
        },
        {
          "name": "docsDir",
          "type": "string",
          "optional": false
        },
        {
          "name": "component",
          "type": "z.infer<any>",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "lineNumber": 278
    },
    {
      "id": "default-container__docs__sanitizeFileName",
      "componentId": "default-container__docs",
      "name": "docs__sanitizeFileName",
      "type": "function",
      "returnType": "string",
      "parameters": [
        {
          "name": "name",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "lineNumber": 312
    },
    {
      "description": "Extract architecture information from a Node.js/TypeScript codebase",
      "id": "default-container__extractors__basicNodeExtractor",
      "componentId": "default-container__extractors",
      "name": "extractors__basicNodeExtractor",
      "type": "function",
      "documentation": {
        "summary": "Extract architecture information from a Node.js/TypeScript codebase",
        "examples": [
          "```typescript\nconst ir = await basicNodeExtractor({\n  use: 'builtin/basic-node',\n  name: 'code-extractor',\n  props: {},\n  inputs: {\n    include: ['src/**\\/*.ts'],\n    exclude: ['**\\/*.test.ts']\n  },\n  _effective: { includes: [], excludes: [] }\n});\n```"
        ]
      },
      "returnType": "Promise<z.infer<any>>",
      "returnDescription": "Promise resolving to ArchletteIR with code, components, and relationships",
      "parameters": [
        {
          "name": "node",
          "description": "- Configuration node with include/exclude patterns",
          "optional": false
        },
        {
          "name": "ctx",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").PipelineContext",
          "description": "- Optional pipeline context with logger",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node.ts",
      "lineNumber": 72
    },
    {
      "description": "Extract deployment topology from Cloudflare Wrangler configuration files",
      "id": "default-container__extractors__basicWranglerExtractor",
      "componentId": "default-container__extractors",
      "name": "extractors__basicWranglerExtractor",
      "type": "function",
      "documentation": {
        "summary": "Extract deployment topology from Cloudflare Wrangler configuration files",
        "examples": [
          "```typescript\nconst ir = await basicWranglerExtractor({\n  use: 'builtin/basic-wrangler',\n  name: 'wrangler-extractor',\n  props: {},\n  inputs: {\n    include: ['iac/workers/*.toml']\n  },\n  _effective: { includes: [], excludes: [] }\n});\n```"
        ]
      },
      "returnType": "Promise<z.infer<any>>",
      "returnDescription": "Promise resolving to ArchletteIR with containers, deployments, and relationships",
      "parameters": [
        {
          "name": "node",
          "description": "- Configuration node with include/exclude patterns",
          "optional": false
        },
        {
          "name": "ctx",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").PipelineContext",
          "description": "- Optional pipeline context with logger",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler.ts",
      "lineNumber": 68
    },
    {
      "description": "Generate Structurizr DSL from ArchletteIR",
      "id": "default-container__generators__structurizrGenerator",
      "componentId": "default-container__generators",
      "name": "generators__structurizrGenerator",
      "type": "function",
      "documentation": {
        "summary": "Generate Structurizr DSL from ArchletteIR"
      },
      "returnType": "string",
      "parameters": [
        {
          "name": "ir",
          "type": "z.infer<any>",
          "optional": false
        },
        {
          "name": "_node",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "lineNumber": 50
    },
    {
      "description": "Prepare container data with components, code, and relationships for template",
      "id": "default-container__generators__prepareContainerData",
      "componentId": "default-container__generators",
      "name": "generators__prepareContainerData",
      "type": "function",
      "documentation": {
        "summary": "Prepare container data with components, code, and relationships for template"
      },
      "returnType": "any",
      "parameters": [
        {
          "name": "container",
          "type": "z.infer<any>",
          "optional": false
        },
        {
          "name": "ir",
          "type": "z.infer<any>",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "lineNumber": 89
    },
    {
      "description": "Prepare component view data for template",
      "id": "default-container__generators__prepareComponentView",
      "componentId": "default-container__generators",
      "name": "generators__prepareComponentView",
      "type": "function",
      "documentation": {
        "summary": "Prepare component view data for template"
      },
      "returnType": "{ containerId: any; viewName: string; relevantActors: any; components: any; }",
      "parameters": [
        {
          "name": "container",
          "type": "z.infer<any>",
          "optional": false
        },
        {
          "name": "ir",
          "type": "z.infer<any>",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "lineNumber": 131
    },
    {
      "description": "Prepare class view data for template",
      "id": "default-container__generators__prepareClassView",
      "componentId": "default-container__generators",
      "name": "generators__prepareClassView",
      "type": "function",
      "documentation": {
        "summary": "Prepare class view data for template"
      },
      "returnType": "{ containerId: any; viewName: string; codeItems: any; }",
      "parameters": [
        {
          "name": "component",
          "type": "z.infer<any>",
          "optional": false
        },
        {
          "name": "ir",
          "type": "z.infer<any>",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "lineNumber": 168
    },
    {
      "description": "Generate all actor-related relationships",
      "id": "default-container__generators__generateAllActorRelationships",
      "componentId": "default-container__generators",
      "name": "generators__generateAllActorRelationships",
      "type": "function",
      "documentation": {
        "summary": "Generate all actor-related relationships"
      },
      "returnType": "z.infer<any>[]",
      "parameters": [
        {
          "name": "ir",
          "type": "z.infer<any>",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "lineNumber": 183
    },
    {
      "description": "Generate a unique name for a code item to avoid naming collisions",
      "id": "default-container__generators__generateUniqueCodeName",
      "componentId": "default-container__generators",
      "name": "generators__generateUniqueCodeName",
      "type": "function",
      "documentation": {
        "summary": "Generate a unique name for a code item to avoid naming collisions"
      },
      "returnType": "string",
      "parameters": [
        {
          "name": "code",
          "type": "z.infer<any>",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "lineNumber": 230
    },
    {
      "description": "Build technology string from relationship metadata",
      "id": "default-container__generators__buildTechnologyString",
      "componentId": "default-container__generators",
      "name": "generators__buildTechnologyString",
      "type": "function",
      "documentation": {
        "summary": "Build technology string from relationship metadata"
      },
      "returnType": "string",
      "parameters": [
        {
          "name": "rel",
          "type": "z.infer<any>",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "lineNumber": 268
    },
    {
      "description": "Sanitize ID for DSL (remove special characters, convert to valid identifier)",
      "id": "default-container__generators__sanitizeId",
      "componentId": "default-container__generators",
      "name": "generators__sanitizeId",
      "type": "function",
      "documentation": {
        "summary": "Sanitize ID for DSL (remove special characters, convert to valid identifier)"
      },
      "returnType": "string",
      "parameters": [
        {
          "name": "id",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "lineNumber": 284
    },
    {
      "description": "Escape special characters in strings for DSL",
      "id": "default-container__generators__escapeString",
      "componentId": "default-container__generators",
      "name": "generators__escapeString",
      "type": "function",
      "documentation": {
        "summary": "Escape special characters in strings for DSL"
      },
      "returnType": "string",
      "parameters": [
        {
          "name": "str",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "lineNumber": 291
    },
    {
      "description": "Render PlantUML files to PNG images",
      "id": "default-container__renderers__plantumlRender",
      "componentId": "default-container__renderers",
      "name": "renderers__plantumlRender",
      "type": "function",
      "documentation": {
        "summary": "Render PlantUML files to PNG images"
      },
      "returnType": "Promise<void>",
      "parameters": [
        {
          "name": "ctx",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").PipelineContext",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/renderers/builtin/plantuml-render.ts",
      "lineNumber": 28
    },
    {
      "description": "Export Structurizr DSL to PlantUML and Mermaid formats",
      "id": "default-container__renderers__structurizrExport",
      "componentId": "default-container__renderers",
      "name": "renderers__structurizrExport",
      "type": "function",
      "documentation": {
        "summary": "Export Structurizr DSL to PlantUML and Mermaid formats"
      },
      "returnType": "Promise<void>",
      "parameters": [
        {
          "name": "ctx",
          "type": "import(\"C:/Users/chris/git/archlette/src/core/types\").PipelineContext",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/renderers/builtin/structurizr-export.ts",
      "lineNumber": 28
    },
    {
      "description": "Validates the IR against the Zod schema. Throws if invalid.",
      "id": "default-container__validators__baseValidator",
      "componentId": "default-container__validators",
      "name": "validators__baseValidator",
      "type": "function",
      "documentation": {
        "summary": "Validates the IR against the Zod schema. Throws if invalid."
      },
      "returnType": "z.infer<any>",
      "returnDescription": "The same IR if valid",
      "parameters": [
        {
          "name": "ir",
          "type": "z.infer<any>",
          "description": "- The input ArchletteIR",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/validators/builtin/base-validator.ts",
      "lineNumber": 26
    },
    {
      "description": "Extract all class declarations from a source file",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts:extractClasses",
      "name": "extractClasses",
      "type": "function",
      "documentation": {
        "summary": "Extract all class declarations from a source file"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedClass[]",
      "parameters": [
        {
          "name": "sourceFile",
          "type": "SourceFile",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "lineNumber": 31
    },
    {
      "description": "Extract information from a single class declaration",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts:extractClass",
      "name": "extractClass",
      "type": "function",
      "documentation": {
        "summary": "Extract information from a single class declaration"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedClass",
      "parameters": [
        {
          "name": "cls",
          "type": "ClassDeclaration",
          "optional": false
        },
        {
          "name": "filePath",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "lineNumber": 52
    },
    {
      "description": "Extract method information from a class",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts:extractMethod",
      "name": "extractMethod",
      "type": "function",
      "documentation": {
        "summary": "Extract method information from a class"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedMethod",
      "parameters": [
        {
          "name": "method",
          "type": "MethodDeclaration",
          "optional": false
        },
        {
          "name": "filePath",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "lineNumber": 91
    },
    {
      "description": "Extract property information from a class",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts:extractProperty",
      "name": "extractProperty",
      "type": "function",
      "documentation": {
        "summary": "Extract property information from a class"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedProperty",
      "parameters": [
        {
          "name": "prop",
          "type": "PropertyDeclaration",
          "optional": false
        },
        {
          "name": "filePath",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "lineNumber": 120
    },
    {
      "description": "Extract parameter information",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts:extractParameter",
      "name": "extractParameter",
      "type": "function",
      "documentation": {
        "summary": "Extract parameter information"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ParameterInfo",
      "parameters": [
        {
          "name": "param",
          "optional": false
        },
        {
          "name": "descriptions",
          "type": "Map<string, string>",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "lineNumber": 145
    },
    {
      "description": "Map ts-morph Scope to our visibility string",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts:mapVisibility",
      "name": "mapVisibility",
      "type": "function",
      "documentation": {
        "summary": "Map ts-morph Scope to our visibility string"
      },
      "returnType": "\"public\" | \"private\" | \"protected\"",
      "parameters": [
        {
          "name": "scope",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "lineNumber": 166
    },
    {
      "description": "Get JSDoc comments from a source file\nChecks both the first statement and module-level JSDoc",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts:getFileJsDocs",
      "name": "getFileJsDocs",
      "type": "function",
      "documentation": {
        "summary": "Get JSDoc comments from a source file\nChecks both the first statement and module-level JSDoc"
      },
      "returnType": "Node[]",
      "returnDescription": "Array of JSDoc nodes (empty if none found)",
      "parameters": [
        {
          "name": "sourceFile",
          "type": "SourceFile",
          "description": "- TypeScript source file to extract JSDoc from",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "lineNumber": 36
    },
    {
      "description": "Extract component information from file-level JSDoc\nChecks the first JSDoc comment in the file for",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts:extractFileComponent",
      "name": "extractFileComponent",
      "type": "function",
      "documentation": {
        "summary": "Extract component information from file-level JSDoc\nChecks the first JSDoc comment in the file for"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector\").ComponentInfo",
      "parameters": [
        {
          "name": "sourceFile",
          "type": "SourceFile",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "lineNumber": 53
    },
    {
      "description": "Extract actors from file-level JSDoc\nLooks for",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts:extractFileActors",
      "name": "extractFileActors",
      "type": "function",
      "documentation": {
        "summary": "Extract actors from file-level JSDoc\nLooks for"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector\").ActorInfo[]",
      "parameters": [
        {
          "name": "sourceFile",
          "type": "SourceFile",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "lineNumber": 72
    },
    {
      "description": "Extract relationships from file-level JSDoc\nLooks for",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts:extractFileRelationships",
      "name": "extractFileRelationships",
      "type": "function",
      "documentation": {
        "summary": "Extract relationships from file-level JSDoc\nLooks for"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector\").RelationshipInfo[]",
      "parameters": [
        {
          "name": "sourceFile",
          "type": "SourceFile",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "lineNumber": 91
    },
    {
      "description": "Extract component info from a JSDoc node",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts:extractComponentFromJsDoc",
      "name": "extractComponentFromJsDoc",
      "type": "function",
      "documentation": {
        "summary": "Extract component info from a JSDoc node"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector\").ComponentInfo",
      "parameters": [
        {
          "name": "jsDoc",
          "type": "Node",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "lineNumber": 107
    },
    {
      "description": "Extract actors from a JSDoc node\nParses",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts:extractActorsFromJsDoc",
      "name": "extractActorsFromJsDoc",
      "type": "function",
      "documentation": {
        "summary": "Extract actors from a JSDoc node\nParses"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector\").ActorInfo[]",
      "parameters": [
        {
          "name": "jsDoc",
          "type": "Node",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "lineNumber": 138
    },
    {
      "description": "Parse an",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts:parseActorTag",
      "name": "parseActorTag",
      "type": "function",
      "documentation": {
        "summary": "Parse an"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector\").ActorInfo",
      "parameters": [
        {
          "name": "tag",
          "type": "JSDocTag",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "lineNumber": 169
    },
    {
      "description": "Extract relationships from a JSDoc node\nParses",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts:extractRelationshipsFromJsDoc",
      "name": "extractRelationshipsFromJsDoc",
      "type": "function",
      "documentation": {
        "summary": "Extract relationships from a JSDoc node\nParses"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector\").RelationshipInfo[]",
      "parameters": [
        {
          "name": "jsDoc",
          "type": "Node",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "lineNumber": 206
    },
    {
      "description": "Parse a",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts:parseUsesTag",
      "name": "parseUsesTag",
      "type": "function",
      "documentation": {
        "summary": "Parse a"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector\").RelationshipInfo",
      "parameters": [
        {
          "name": "tag",
          "type": "JSDocTag",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "lineNumber": 233
    },
    {
      "description": "Extract component name from a JSDoc tag\nHandles formats like:\n-",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts:extractComponentName",
      "name": "extractComponentName",
      "type": "function",
      "documentation": {
        "summary": "Extract component name from a JSDoc tag\nHandles formats like:\n-"
      },
      "returnType": "string",
      "parameters": [
        {
          "name": "tag",
          "type": "JSDocTag",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "lineNumber": 264
    },
    {
      "description": "Extract documentation information from JSDoc",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts:extractDocumentation",
      "name": "extractDocumentation",
      "type": "function",
      "documentation": {
        "summary": "Extract documentation information from JSDoc"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").DocInfo",
      "parameters": [
        {
          "name": "jsDocs",
          "type": "JSDoc[]",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts",
      "lineNumber": 12
    },
    {
      "description": "Extract deprecation information from JSDoc",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts:extractDeprecation",
      "name": "extractDeprecation",
      "type": "function",
      "documentation": {
        "summary": "Extract deprecation information from JSDoc"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").DeprecationInfo",
      "parameters": [
        {
          "name": "jsDocs",
          "type": "JSDoc[]",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts",
      "lineNumber": 63
    },
    {
      "description": "Extract parameter descriptions from JSDoc",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts:extractParameterDescriptions",
      "name": "extractParameterDescriptions",
      "type": "function",
      "documentation": {
        "summary": "Extract parameter descriptions from JSDoc"
      },
      "returnType": "Map<string, string>",
      "parameters": [
        {
          "name": "jsDocs",
          "type": "JSDoc[]",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts",
      "lineNumber": 92
    },
    {
      "description": "Extract return description from JSDoc",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts:extractReturnDescription",
      "name": "extractReturnDescription",
      "type": "function",
      "documentation": {
        "summary": "Extract return description from JSDoc"
      },
      "returnType": "string",
      "parameters": [
        {
          "name": "jsDocs",
          "type": "JSDoc[]",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts",
      "lineNumber": 115
    },
    {
      "description": "Extract parameter name from",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts:extractParameterName",
      "name": "extractParameterName",
      "type": "function",
      "documentation": {
        "summary": "Extract parameter name from"
      },
      "returnType": "string",
      "parameters": [
        {
          "name": "tag",
          "type": "JSDocTag",
          "description": "Handles formats like:",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts",
      "lineNumber": 130
    },
    {
      "description": "Find source files matching include/exclude patterns",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts:findSourceFiles",
      "name": "findSourceFiles",
      "type": "function",
      "documentation": {
        "summary": "Find source files matching include/exclude patterns"
      },
      "returnType": "Promise<string[]>",
      "parameters": [
        {
          "name": "inputs",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractorInputs",
          "optional": true
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts",
      "lineNumber": 31
    },
    {
      "description": "Find package.json files within the search paths",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts:findPackageJsonFiles",
      "name": "findPackageJsonFiles",
      "type": "function",
      "documentation": {
        "summary": "Find package.json files within the search paths"
      },
      "returnType": "Promise<string[]>",
      "parameters": [
        {
          "name": "inputs",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractorInputs",
          "optional": true
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts",
      "lineNumber": 47
    },
    {
      "description": "Read and parse package.json file",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts:readPackageInfo",
      "name": "readPackageInfo",
      "type": "function",
      "documentation": {
        "summary": "Read and parse package.json file"
      },
      "returnType": "Promise<import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").PackageInfo>",
      "parameters": [
        {
          "name": "filePath",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts",
      "lineNumber": 85
    },
    {
      "description": "Find the nearest parent package.json for a given file",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts:findNearestPackage",
      "name": "findNearestPackage",
      "type": "function",
      "documentation": {
        "summary": "Find the nearest parent package.json for a given file"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").PackageInfo",
      "parameters": [
        {
          "name": "filePath",
          "type": "string",
          "optional": false
        },
        {
          "name": "packages",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").PackageInfo[]",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts",
      "lineNumber": 109
    },
    {
      "description": "Parse and extract information from source files",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts:parseFiles",
      "name": "parseFiles",
      "type": "function",
      "documentation": {
        "summary": "Parse and extract information from source files"
      },
      "returnType": "Promise<import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").FileExtraction[]>",
      "parameters": [
        {
          "name": "filePaths",
          "type": "string[]",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "lineNumber": 23
    },
    {
      "description": "Extract all function declarations from a source file",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts:extractFunctions",
      "name": "extractFunctions",
      "type": "function",
      "documentation": {
        "summary": "Extract all function declarations from a source file"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedFunction[]",
      "parameters": [
        {
          "name": "sourceFile",
          "type": "SourceFile",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "lineNumber": 20
    },
    {
      "description": "Extract information from a single function declaration",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts:extractFunction",
      "name": "extractFunction",
      "type": "function",
      "documentation": {
        "summary": "Extract information from a single function declaration"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedFunction",
      "parameters": [
        {
          "name": "func",
          "type": "FunctionDeclaration",
          "optional": false
        },
        {
          "name": "filePath",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "lineNumber": 43
    },
    {
      "description": "Extract parameter information",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts:extractParameter",
      "name": "extractParameter",
      "type": "function",
      "documentation": {
        "summary": "Extract parameter information"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ParameterInfo",
      "parameters": [
        {
          "name": "param",
          "optional": false
        },
        {
          "name": "descriptions",
          "type": "Map<string, string>",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "lineNumber": 79
    },
    {
      "description": "Extract arrow functions assigned to const/let/var\nExamples:\n  const handleClick = () => {}\n  export const createUser = async (data) => {}",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts:extractArrowFunctions",
      "name": "extractArrowFunctions",
      "type": "function",
      "documentation": {
        "summary": "Extract arrow functions assigned to const/let/var\nExamples:\n  const handleClick = () => {}\n  export const createUser = async (data) => {}"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedFunction[]",
      "parameters": [
        {
          "name": "sourceFile",
          "type": "SourceFile",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "lineNumber": 103
    },
    {
      "description": "Extract all import declarations from a source file",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/import-extractor.ts:extractImports",
      "name": "extractImports",
      "type": "function",
      "documentation": {
        "summary": "Extract all import declarations from a source file"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedImport[]",
      "parameters": [
        {
          "name": "sourceFile",
          "type": "SourceFile",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/import-extractor.ts",
      "lineNumber": 14
    },
    {
      "description": "Map file extractions to ArchletteIR",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts:mapToIR",
      "name": "mapToIR",
      "type": "function",
      "documentation": {
        "summary": "Map file extractions to ArchletteIR"
      },
      "returnType": "z.infer<any>",
      "parameters": [
        {
          "name": "extractions",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").FileExtraction[]",
          "optional": false
        },
        {
          "name": "packages",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").PackageInfo[]",
          "optional": true
        },
        {
          "name": "systemInfo",
          "type": "z.infer<any>",
          "optional": true
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "lineNumber": 32
    },
    {
      "description": "Deduplicate relationships by source+destination+stereotype combination\nFirst occurrence wins - preserves description from first relationship\nThis allows multiple relationships between the same elements with different stereotypes",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts:deduplicateRelationships",
      "name": "deduplicateRelationships",
      "type": "function",
      "documentation": {
        "summary": "Deduplicate relationships by source+destination+stereotype combination\nFirst occurrence wins - preserves description from first relationship\nThis allows multiple relationships between the same elements with different stereotypes"
      },
      "returnType": "z.infer<any>[]",
      "parameters": [
        {
          "name": "relationships",
          "type": "z.infer<any>[]",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "lineNumber": 351
    },
    {
      "description": "Map a function to a CodeItem",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts:mapFunction",
      "name": "mapFunction",
      "type": "function",
      "documentation": {
        "summary": "Map a function to a CodeItem"
      },
      "returnType": "z.infer<any>",
      "parameters": [
        {
          "name": "func",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedFunction",
          "optional": false
        },
        {
          "name": "filePath",
          "type": "string",
          "optional": false
        },
        {
          "name": "componentId",
          "type": "string",
          "optional": true
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "lineNumber": 365
    },
    {
      "description": "Map a class to a CodeItem",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts:mapClass",
      "name": "mapClass",
      "type": "function",
      "documentation": {
        "summary": "Map a class to a CodeItem"
      },
      "returnType": "z.infer<any>",
      "parameters": [
        {
          "name": "cls",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedClass",
          "optional": false
        },
        {
          "name": "filePath",
          "type": "string",
          "optional": false
        },
        {
          "name": "componentId",
          "type": "string",
          "optional": true
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "lineNumber": 393
    },
    {
      "description": "Map a class method to a CodeItem",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts:mapMethod",
      "name": "mapMethod",
      "type": "function",
      "documentation": {
        "summary": "Map a class method to a CodeItem"
      },
      "returnType": "z.infer<any>",
      "parameters": [
        {
          "name": "method",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedMethod",
          "optional": false
        },
        {
          "name": "className",
          "type": "string",
          "optional": false
        },
        {
          "name": "filePath",
          "type": "string",
          "optional": false
        },
        {
          "name": "componentId",
          "type": "string",
          "optional": true
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "lineNumber": 422
    },
    {
      "description": "Map imports to relationships",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts:mapImportRelationships",
      "name": "mapImportRelationships",
      "type": "function",
      "documentation": {
        "summary": "Map imports to relationships"
      },
      "returnType": "z.infer<any>[]",
      "parameters": [
        {
          "name": "imp",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedImport",
          "optional": false
        },
        {
          "name": "filePath",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "lineNumber": 456
    },
    {
      "description": "Generate a unique ID for a code element\nFormat: filePath:symbolName",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts:generateId",
      "name": "generateId",
      "type": "function",
      "documentation": {
        "summary": "Generate a unique ID for a code element\nFormat: filePath:symbolName"
      },
      "returnType": "string",
      "parameters": [
        {
          "name": "filePath",
          "type": "string",
          "optional": false
        },
        {
          "name": "symbolName",
          "type": "string",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "lineNumber": 479
    },
    {
      "description": "Get default system info from package.json if available",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts:getDefaultSystem",
      "name": "getDefaultSystem",
      "type": "function",
      "documentation": {
        "summary": "Get default system info from package.json if available"
      },
      "returnType": "z.infer<any>",
      "parameters": [],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "lineNumber": 488
    },
    {
      "description": "Extract type aliases from a source file\nExamples:\n  type UserRole = 'admin' | 'user' | 'guest'\n  export type ApiResponse<T> = { data: T; status: number }",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/type-extractor.ts:extractTypeAliases",
      "name": "extractTypeAliases",
      "type": "function",
      "documentation": {
        "summary": "Extract type aliases from a source file\nExamples:\n  type UserRole = 'admin' | 'user' | 'guest'\n  export type ApiResponse<T> = { data: T; status: number }"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedType[]",
      "parameters": [
        {
          "name": "sourceFile",
          "type": "SourceFile",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/type-extractor.ts",
      "lineNumber": 18
    },
    {
      "description": "Extract interfaces from a source file\nExamples:\n  interface User { id: string; name: string }\n  export interface ApiClient { get<T>(url: string): Promise<T> }",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/type-extractor.ts:extractInterfaces",
      "name": "extractInterfaces",
      "type": "function",
      "documentation": {
        "summary": "Extract interfaces from a source file\nExamples:\n  interface User { id: string; name: string }\n  export interface ApiClient { get<T>(url: string): Promise<T> }"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/types\").ExtractedInterface[]",
      "parameters": [
        {
          "name": "sourceFile",
          "type": "SourceFile",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/type-extractor.ts",
      "lineNumber": 58
    },
    {
      "description": "Find wrangler.toml files based on include/exclude patterns",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/file-finder.ts:findWranglerFiles",
      "name": "findWranglerFiles",
      "type": "function",
      "documentation": {
        "summary": "Find wrangler.toml files based on include/exclude patterns"
      },
      "returnType": "Promise<string[]>",
      "returnDescription": "Array of absolute file paths to wrangler.toml files",
      "parameters": [
        {
          "name": "inputs",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").ExtractorInputs",
          "description": "- Optional include/exclude patterns",
          "optional": true
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/file-finder.ts",
      "lineNumber": 14
    },
    {
      "description": "Map wrangler configurations to ArchletteIR\n\nThis creates:\n- Containers: One per wrangler.toml file\n- Deployments: One per environment (production, dev, preview, etc.)\n- Container Instances: One per container per environment\n- Container Relationships: Logical dependencies from service bindings\n- Deployment Relationships: Physical instance-to-instance connections",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts:mapToIR",
      "name": "mapToIR",
      "type": "function",
      "documentation": {
        "summary": "Map wrangler configurations to ArchletteIR\n\nThis creates:\n- Containers: One per wrangler.toml file\n- Deployments: One per environment (production, dev, preview, etc.)\n- Container Instances: One per container per environment\n- Container Relationships: Logical dependencies from service bindings\n- Deployment Relationships: Physical instance-to-instance connections"
      },
      "returnType": "z.infer<any>",
      "returnDescription": "Complete ArchletteIR",
      "parameters": [
        {
          "name": "configs",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").WranglerConfig[]",
          "description": "- Parsed wrangler.toml configurations",
          "optional": false
        },
        {
          "name": "systemInfo",
          "type": "z.infer<any>",
          "description": "- Optional system-level metadata",
          "optional": true
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "lineNumber": 29
    },
    {
      "description": "Extract containers from wrangler configurations\n\nCreates one container per wrangler.toml file.\nEach container represents a Cloudflare Worker.",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts:extractContainers",
      "name": "extractContainers",
      "type": "function",
      "documentation": {
        "summary": "Extract containers from wrangler configurations\n\nCreates one container per wrangler.toml file.\nEach container represents a Cloudflare Worker."
      },
      "returnType": "{ id: string; name: string; type: string; layer: string; description: string; tags: string[]; props: { technology: string; filePath: string; }; }[]",
      "returnDescription": "Array of Container objects",
      "parameters": [
        {
          "name": "configs",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").WranglerConfig[]",
          "description": "- Parsed wrangler configurations",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "lineNumber": 76
    },
    {
      "description": "Build a descriptive summary for a container",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts:buildContainerDescription",
      "name": "buildContainerDescription",
      "type": "function",
      "documentation": {
        "summary": "Build a descriptive summary for a container"
      },
      "returnType": "string",
      "returnDescription": "Description string",
      "parameters": [
        {
          "name": "config",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").WranglerConfig",
          "description": "- Wrangler configuration",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "lineNumber": 101
    },
    {
      "description": "Extract deployments and container instances\n\nCreates:\n- One deployment per environment\n- Container instances for each container in each environment",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts:extractDeploymentsAndInstances",
      "name": "extractDeploymentsAndInstances",
      "type": "function",
      "documentation": {
        "summary": "Extract deployments and container instances\n\nCreates:\n- One deployment per environment\n- Container instances for each container in each environment"
      },
      "returnType": "{ deployments: { name: string; environment: string; platform: string; instances: z.infer<any>[]; }[]; instances: z.infer<any>[]; }",
      "returnDescription": "Deployments and container instances",
      "parameters": [
        {
          "name": "configs",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").WranglerConfig[]",
          "description": "- Parsed wrangler configurations",
          "optional": false
        },
        {
          "name": "environments",
          "type": "string[]",
          "description": "- Unique environment names",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "lineNumber": 126
    },
    {
      "description": "Extract container relationships from service bindings\n\nCreates logical dependencies between containers based on service bindings.\nDeduplicates relationships across all environments.",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts:extractContainerRelationships",
      "name": "extractContainerRelationships",
      "type": "function",
      "documentation": {
        "summary": "Extract container relationships from service bindings\n\nCreates logical dependencies between containers based on service bindings.\nDeduplicates relationships across all environments."
      },
      "returnType": "z.infer<any>[]",
      "returnDescription": "Array of container relationships",
      "parameters": [
        {
          "name": "configs",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").WranglerConfig[]",
          "description": "- Parsed wrangler configurations",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "lineNumber": 270
    },
    {
      "description": "Extract deployment relationships from container instances\n\nCreates physical instance-to-instance relationships based on service bindings.\nEach relationship represents an actual runtime dependency in a specific environment.",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts:extractDeploymentRelationships",
      "name": "extractDeploymentRelationships",
      "type": "function",
      "documentation": {
        "summary": "Extract deployment relationships from container instances\n\nCreates physical instance-to-instance relationships based on service bindings.\nEach relationship represents an actual runtime dependency in a specific environment."
      },
      "returnType": "z.infer<any>[]",
      "returnDescription": "Array of deployment relationships",
      "parameters": [
        {
          "name": "instances",
          "type": "z.infer<any>[]",
          "description": "- Container instances",
          "optional": false
        }
      ],
      "visibility": "private",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "lineNumber": 316
    },
    {
      "description": "Parse a wrangler.toml file",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts:parseWranglerFile",
      "name": "parseWranglerFile",
      "type": "function",
      "documentation": {
        "summary": "Parse a wrangler.toml file"
      },
      "returnType": "Promise<import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").WranglerConfig>",
      "returnDescription": "Parsed wrangler configuration",
      "parameters": [
        {
          "name": "filePath",
          "type": "string",
          "description": "- Absolute path to wrangler.toml file",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": true,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "lineNumber": 26
    },
    {
      "description": "Normalize service bindings from various formats\n\nWrangler supports multiple binding formats:\n- [[services]] array (TOML array of tables)\n- services = [{ binding = \"...\", service = \"...\" }]",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts:normalizeServiceBindings",
      "name": "normalizeServiceBindings",
      "type": "function",
      "documentation": {
        "summary": "Normalize service bindings from various formats\n\nWrangler supports multiple binding formats:\n- [[services]] array (TOML array of tables)\n- services = [{ binding = \"...\", service = \"...\" }]"
      },
      "returnType": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").ServiceBinding[]",
      "parameters": [
        {
          "name": "services",
          "type": "unknown",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "lineNumber": 82
    },
    {
      "description": "Get all environments from a wrangler config\n\nReturns a list of environment names, including:\n- \"production\" (from root-level config if it has deployable content)\n- All keys from env.* sections",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts:getEnvironments",
      "name": "getEnvironments",
      "type": "function",
      "documentation": {
        "summary": "Get all environments from a wrangler config\n\nReturns a list of environment names, including:\n- \"production\" (from root-level config if it has deployable content)\n- All keys from env.* sections"
      },
      "returnType": "string[]",
      "parameters": [
        {
          "name": "config",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").WranglerConfig",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "lineNumber": 103
    },
    {
      "description": "Get configuration for a specific environment\n\nMerges root-level config with environment-specific overrides.\nEnvironment config takes precedence.",
      "id": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts:getEnvironmentConfig",
      "name": "getEnvironmentConfig",
      "type": "function",
      "documentation": {
        "summary": "Get configuration for a specific environment\n\nMerges root-level config with environment-specific overrides.\nEnvironment config takes precedence."
      },
      "returnType": "{ name: string; vars?: Record<string, string>; services?: import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").ServiceBinding[]; kv_namespaces?: import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").KVBinding[]; r2_buckets?: import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").R2Binding[]; d1_databases?: import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").D1Binding[]; durable_objects?: { bindings: import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").DurableObjectBinding[]; }; queues?: { producers?: import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").QueueBinding[]; consumers?: import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").QueueBinding[]; }; routes?: string[]; triggers?: { crons?: string[]; }; observability?: Record<string, unknown>; }",
      "returnDescription": "Merged environment configuration",
      "parameters": [
        {
          "name": "config",
          "type": "import(\"C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/types\").WranglerConfig",
          "description": "- Parsed wrangler config",
          "optional": false
        },
        {
          "name": "envName",
          "type": "string",
          "description": "- Environment name (e.g., \"production\", \"development\")",
          "optional": false
        }
      ],
      "visibility": "public",
      "isAsync": false,
      "filePath": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "lineNumber": 144
    }
  ],
  "deployments": [],
  "containerRelationships": [],
  "componentRelationships": [
    {
      "description": "Analyzes source code to extract architecture components",
      "tags": [],
      "source": "default-container__cli",
      "destination": "default-container__extractors"
    },
    {
      "description": "Validates and enriches intermediate representation",
      "tags": [],
      "source": "default-container__cli",
      "destination": "default-container__validators"
    },
    {
      "description": "Transforms IR into DSL formats",
      "tags": [],
      "source": "default-container__cli",
      "destination": "default-container__generators"
    },
    {
      "description": "Converts DSL to visual diagrams",
      "tags": [],
      "source": "default-container__cli",
      "destination": "default-container__renderers"
    },
    {
      "description": "Provides shared utilities, types, and module loading",
      "tags": [],
      "source": "default-container__cli",
      "destination": "default-container__core"
    },
    {
      "description": "Provides IR types, validation schemas, and module loading",
      "tags": [],
      "source": "default-container__extractors",
      "destination": "default-container__core"
    },
    {
      "description": "Provides IR types, validation schemas, and module loading",
      "tags": [],
      "source": "default-container__validators",
      "destination": "default-container__core"
    },
    {
      "description": "Provides IR types, path resolution, and module loading",
      "tags": [],
      "source": "default-container__generators",
      "destination": "default-container__core"
    },
    {
      "description": "Provides types, module loading, and tool management",
      "tags": [],
      "source": "default-container__renderers",
      "destination": "default-container__core"
    },
    {
      "description": "Provides types, module loading, and path resolution",
      "tags": [],
      "source": "default-container__docs",
      "destination": "default-container__core"
    },
    {
      "description": "Uses FileSystem for external system integration",
      "tags": [],
      "source": "default-container__core",
      "destination": "filesystem"
    },
    {
      "description": "Uses Github Structurizr Repo for external system integration",
      "tags": [],
      "source": "default-container__core",
      "destination": "github-structurizr-repo"
    },
    {
      "description": "Uses Github PlantUML Repo for external system integration",
      "tags": [],
      "source": "default-container__core",
      "destination": "github-plantuml-repo"
    },
    {
      "description": "Uses Local System's unzip utility for external system integration",
      "tags": [],
      "source": "default-container__core",
      "destination": "local-systems-unzip-utility"
    },
    {
      "description": "Uses File System for external system integration",
      "tags": [],
      "source": "default-container__core",
      "destination": "file-system"
    }
  ],
  "codeRelationships": [
    {
      "description": "imports pathToFileURL",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "node:url:pathToFileURL",
      "stereotype": "import"
    },
    {
      "description": "imports * as fs",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "node:fs:* as fs",
      "stereotype": "import"
    },
    {
      "description": "imports * as path",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "node:path:* as path",
      "stereotype": "import"
    },
    {
      "description": "imports PipelineContext",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "./core/types.ts:PipelineContext",
      "stereotype": "type-import"
    },
    {
      "description": "imports StageModule",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "./core/types.ts:StageModule",
      "stereotype": "type-import"
    },
    {
      "description": "imports ResolvedAACConfig",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "./core/types-aac.ts:ResolvedAACConfig",
      "stereotype": "type-import"
    },
    {
      "description": "imports getStageEntry",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "./core/stage-entry.js:getStageEntry",
      "stereotype": "import"
    },
    {
      "description": "imports loadModuleFromPath",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "./core/module-loader.js:loadModuleFromPath",
      "stereotype": "import"
    },
    {
      "description": "imports resolveArchlettePath",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "./core/path-resolver.js:resolveArchlettePath",
      "stereotype": "import"
    },
    {
      "description": "imports getCliDir",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "./core/path-resolver.js:getCliDir",
      "stereotype": "import"
    },
    {
      "description": "imports AACConfigSchema",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "./core/types-aac.js:AACConfigSchema",
      "stereotype": "import"
    },
    {
      "description": "imports resolveConfig",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "./core/types-aac.js:resolveConfig",
      "stereotype": "import"
    },
    {
      "description": "imports createLogger",
      "source": "C:/Users/chris/git/archlette/src/cli.ts",
      "destination": "./core/logger.js:createLogger",
      "stereotype": "import"
    },
    {
      "description": "imports ArchletteIR",
      "source": "C:/Users/chris/git/archlette/src/1-extract/aggregator.ts",
      "destination": "../core/types-ir.js:ArchletteIR",
      "stereotype": "type-import"
    },
    {
      "description": "imports Relationship",
      "source": "C:/Users/chris/git/archlette/src/1-extract/aggregator.ts",
      "destination": "../core/types-ir.js:Relationship",
      "stereotype": "type-import"
    },
    {
      "description": "imports emptyIR",
      "source": "C:/Users/chris/git/archlette/src/1-extract/aggregator.ts",
      "destination": "../core/types-ir.js:emptyIR",
      "stereotype": "import"
    },
    {
      "description": "imports PipelineContext",
      "source": "C:/Users/chris/git/archlette/src/1-extract/index.ts",
      "destination": "../core/types.js:PipelineContext",
      "stereotype": "type-import"
    },
    {
      "description": "imports loadExtractorModule",
      "source": "C:/Users/chris/git/archlette/src/1-extract/index.ts",
      "destination": "../core/stage-module-loader:loadExtractorModule",
      "stereotype": "import"
    },
    {
      "description": "imports zArchletteIR",
      "source": "C:/Users/chris/git/archlette/src/1-extract/index.ts",
      "destination": "../core/types-ir:zArchletteIR",
      "stereotype": "import"
    },
    {
      "description": "imports ArchletteIR",
      "source": "C:/Users/chris/git/archlette/src/1-extract/index.ts",
      "destination": "../core/types-ir:ArchletteIR",
      "stereotype": "import"
    },
    {
      "description": "imports resolveArchlettePath",
      "source": "C:/Users/chris/git/archlette/src/1-extract/index.ts",
      "destination": "../core/path-resolver.js:resolveArchlettePath",
      "stereotype": "import"
    },
    {
      "description": "imports writeFile",
      "source": "C:/Users/chris/git/archlette/src/1-extract/index.ts",
      "destination": "../core/path-resolver.js:writeFile",
      "stereotype": "import"
    },
    {
      "description": "imports ResolvedAACConfig",
      "source": "C:/Users/chris/git/archlette/src/1-extract/index.ts",
      "destination": "../core/types-aac:ResolvedAACConfig",
      "stereotype": "type-import"
    },
    {
      "description": "imports ResolvedStageNode",
      "source": "C:/Users/chris/git/archlette/src/1-extract/index.ts",
      "destination": "../core/types-aac:ResolvedStageNode",
      "stereotype": "type-import"
    },
    {
      "description": "imports aggregateIRs",
      "source": "C:/Users/chris/git/archlette/src/1-extract/index.ts",
      "destination": "./aggregator.js:aggregateIRs",
      "stereotype": "import"
    },
    {
      "description": "imports PipelineContext",
      "source": "C:/Users/chris/git/archlette/src/2-validate/index.ts",
      "destination": "../core/types.js:PipelineContext",
      "stereotype": "type-import"
    },
    {
      "description": "imports loadValidatorModule",
      "source": "C:/Users/chris/git/archlette/src/2-validate/index.ts",
      "destination": "../core/stage-module-loader.js:loadValidatorModule",
      "stereotype": "import"
    },
    {
      "description": "imports ResolvedAACConfig",
      "source": "C:/Users/chris/git/archlette/src/2-validate/index.ts",
      "destination": "../core/types-aac.js:ResolvedAACConfig",
      "stereotype": "type-import"
    },
    {
      "description": "imports ResolvedStageNode",
      "source": "C:/Users/chris/git/archlette/src/2-validate/index.ts",
      "destination": "../core/types-aac.js:ResolvedStageNode",
      "stereotype": "type-import"
    },
    {
      "description": "imports resolveArchlettePath",
      "source": "C:/Users/chris/git/archlette/src/2-validate/index.ts",
      "destination": "../core/path-resolver.js:resolveArchlettePath",
      "stereotype": "import"
    },
    {
      "description": "imports writeFile",
      "source": "C:/Users/chris/git/archlette/src/2-validate/index.ts",
      "destination": "../core/path-resolver.js:writeFile",
      "stereotype": "import"
    },
    {
      "description": "imports PipelineContext",
      "source": "C:/Users/chris/git/archlette/src/3-generate/index.ts",
      "destination": "../core/types.js:PipelineContext",
      "stereotype": "type-import"
    },
    {
      "description": "imports GeneratorOutput",
      "source": "C:/Users/chris/git/archlette/src/3-generate/index.ts",
      "destination": "../core/types.js:GeneratorOutput",
      "stereotype": "type-import"
    },
    {
      "description": "imports loadGeneratorModule",
      "source": "C:/Users/chris/git/archlette/src/3-generate/index.ts",
      "destination": "../core/stage-module-loader.js:loadGeneratorModule",
      "stereotype": "import"
    },
    {
      "description": "imports ResolvedAACConfig",
      "source": "C:/Users/chris/git/archlette/src/3-generate/index.ts",
      "destination": "../core/types-aac.js:ResolvedAACConfig",
      "stereotype": "type-import"
    },
    {
      "description": "imports ResolvedStageNode",
      "source": "C:/Users/chris/git/archlette/src/3-generate/index.ts",
      "destination": "../core/types-aac.js:ResolvedStageNode",
      "stereotype": "type-import"
    },
    {
      "description": "imports resolveArchlettePath",
      "source": "C:/Users/chris/git/archlette/src/3-generate/index.ts",
      "destination": "../core/path-resolver.js:resolveArchlettePath",
      "stereotype": "import"
    },
    {
      "description": "imports writeFile",
      "source": "C:/Users/chris/git/archlette/src/3-generate/index.ts",
      "destination": "../core/path-resolver.js:writeFile",
      "stereotype": "import"
    },
    {
      "description": "imports PipelineContext",
      "source": "C:/Users/chris/git/archlette/src/4-render/index.ts",
      "destination": "../core/types.js:PipelineContext",
      "stereotype": "type-import"
    },
    {
      "description": "imports ResolvedAACConfig",
      "source": "C:/Users/chris/git/archlette/src/4-render/index.ts",
      "destination": "../core/types-aac.js:ResolvedAACConfig",
      "stereotype": "type-import"
    },
    {
      "description": "imports ResolvedStageNode",
      "source": "C:/Users/chris/git/archlette/src/4-render/index.ts",
      "destination": "../core/types-aac.js:ResolvedStageNode",
      "stereotype": "type-import"
    },
    {
      "description": "imports loadRendererModule",
      "source": "C:/Users/chris/git/archlette/src/4-render/index.ts",
      "destination": "../core/stage-module-loader.js:loadRendererModule",
      "stereotype": "import"
    },
    {
      "description": "imports PipelineContext",
      "source": "C:/Users/chris/git/archlette/src/5-docs/index.ts",
      "destination": "../core/types.js:PipelineContext",
      "stereotype": "type-import"
    },
    {
      "description": "imports ResolvedAACConfig",
      "source": "C:/Users/chris/git/archlette/src/5-docs/index.ts",
      "destination": "../core/types-aac.js:ResolvedAACConfig",
      "stereotype": "type-import"
    },
    {
      "description": "imports ResolvedStageNode",
      "source": "C:/Users/chris/git/archlette/src/5-docs/index.ts",
      "destination": "../core/types-aac.js:ResolvedStageNode",
      "stereotype": "type-import"
    },
    {
      "description": "imports loadDocModule",
      "source": "C:/Users/chris/git/archlette/src/5-docs/index.ts",
      "destination": "../core/stage-module-loader.js:loadDocModule",
      "stereotype": "import"
    },
    {
      "description": "imports pino",
      "source": "C:/Users/chris/git/archlette/src/core/logger.ts",
      "destination": "pino:pino",
      "stereotype": "import"
    },
    {
      "description": "imports Logger",
      "source": "C:/Users/chris/git/archlette/src/core/logger.ts",
      "destination": "pino:Logger",
      "stereotype": "type-import"
    },
    {
      "description": "imports resolveModuleEntry",
      "source": "C:/Users/chris/git/archlette/src/core/module-loader.ts",
      "destination": "./path-resolver.js:resolveModuleEntry",
      "stereotype": "import"
    },
    {
      "description": "imports getCliDir",
      "source": "C:/Users/chris/git/archlette/src/core/module-loader.ts",
      "destination": "./path-resolver.js:getCliDir",
      "stereotype": "import"
    },
    {
      "description": "imports toFileUrl",
      "source": "C:/Users/chris/git/archlette/src/core/module-loader.ts",
      "destination": "./path-resolver.js:toFileUrl",
      "stereotype": "import"
    },
    {
      "description": "imports fileURLToPath",
      "source": "C:/Users/chris/git/archlette/src/core/path-resolver.ts",
      "destination": "node:url:fileURLToPath",
      "stereotype": "import"
    },
    {
      "description": "imports pathToFileURL",
      "source": "C:/Users/chris/git/archlette/src/core/path-resolver.ts",
      "destination": "node:url:pathToFileURL",
      "stereotype": "import"
    },
    {
      "description": "imports * as path",
      "source": "C:/Users/chris/git/archlette/src/core/path-resolver.ts",
      "destination": "node:path:* as path",
      "stereotype": "import"
    },
    {
      "description": "imports * as fs",
      "source": "C:/Users/chris/git/archlette/src/core/path-resolver.ts",
      "destination": "node:fs:* as fs",
      "stereotype": "import"
    },
    {
      "description": "imports createLogger",
      "source": "C:/Users/chris/git/archlette/src/core/path-resolver.ts",
      "destination": "./logger.js:createLogger",
      "stereotype": "import"
    },
    {
      "description": "imports ArchletteIR",
      "source": "C:/Users/chris/git/archlette/src/core/stage-interfaces.ts",
      "destination": "./types-ir:ArchletteIR",
      "stereotype": "type-import"
    },
    {
      "description": "imports ResolvedStageNode",
      "source": "C:/Users/chris/git/archlette/src/core/stage-interfaces.ts",
      "destination": "./types-aac:ResolvedStageNode",
      "stereotype": "type-import"
    },
    {
      "description": "imports PipelineContext",
      "source": "C:/Users/chris/git/archlette/src/core/stage-interfaces.ts",
      "destination": "./types:PipelineContext",
      "stereotype": "type-import"
    },
    {
      "description": "imports loadModuleFromPath",
      "source": "C:/Users/chris/git/archlette/src/core/stage-module-loader.ts",
      "destination": "./module-loader:loadModuleFromPath",
      "stereotype": "import"
    },
    {
      "description": "imports getStageEntry",
      "source": "C:/Users/chris/git/archlette/src/core/stage-module-loader.ts",
      "destination": "./stage-entry.js:getStageEntry",
      "stereotype": "import"
    },
    {
      "description": "imports * as fs",
      "source": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "destination": "node:fs:* as fs",
      "stereotype": "import"
    },
    {
      "description": "imports * as path",
      "source": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "destination": "node:path:* as path",
      "stereotype": "import"
    },
    {
      "description": "imports * as os",
      "source": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "destination": "node:os:* as os",
      "stereotype": "import"
    },
    {
      "description": "imports * as https",
      "source": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "destination": "node:https:* as https",
      "stereotype": "import"
    },
    {
      "description": "imports execSync",
      "source": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "destination": "node:child_process:execSync",
      "stereotype": "import"
    },
    {
      "description": "imports createWriteStream",
      "source": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "destination": "node:fs:createWriteStream",
      "stereotype": "import"
    },
    {
      "description": "imports Logger",
      "source": "C:/Users/chris/git/archlette/src/core/tool-manager.ts",
      "destination": "./types.js:Logger",
      "stereotype": "type-import"
    },
    {
      "description": "imports z",
      "source": "C:/Users/chris/git/archlette/src/core/types-aac.ts",
      "destination": "zod:z",
      "stereotype": "import"
    },
    {
      "description": "imports z",
      "source": "C:/Users/chris/git/archlette/src/core/types-ir.ts",
      "destination": "zod:z",
      "stereotype": "import"
    },
    {
      "description": "imports ResolvedAACConfig",
      "source": "C:/Users/chris/git/archlette/src/core/types.ts",
      "destination": "./types-aac:ResolvedAACConfig",
      "stereotype": "type-import"
    },
    {
      "description": "imports ArchletteIR",
      "source": "C:/Users/chris/git/archlette/src/core/types.ts",
      "destination": "./types-ir:ArchletteIR",
      "stereotype": "type-import"
    },
    {
      "description": "imports Logger",
      "source": "C:/Users/chris/git/archlette/src/core/types.ts",
      "destination": "./logger.js:Logger",
      "stereotype": "type-import"
    },
    {
      "description": "imports * as fs",
      "source": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "destination": "node:fs:* as fs",
      "stereotype": "import"
    },
    {
      "description": "imports * as path",
      "source": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "destination": "node:path:* as path",
      "stereotype": "import"
    },
    {
      "description": "imports fileURLToPath",
      "source": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "destination": "node:url:fileURLToPath",
      "stereotype": "import"
    },
    {
      "description": "imports createRequire",
      "source": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "destination": "node:module:createRequire",
      "stereotype": "import"
    },
    {
      "description": "imports PipelineContext",
      "source": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "destination": "../../core/types.js:PipelineContext",
      "stereotype": "type-import"
    },
    {
      "description": "imports Logger",
      "source": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "destination": "../../core/types.js:Logger",
      "stereotype": "type-import"
    },
    {
      "description": "imports RendererOutput",
      "source": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "destination": "../../core/types.js:RendererOutput",
      "stereotype": "type-import"
    },
    {
      "description": "imports Component",
      "source": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "destination": "../../core/types-ir.js:Component",
      "stereotype": "type-import"
    },
    {
      "description": "imports resolveArchlettePath",
      "source": "C:/Users/chris/git/archlette/src/docs/builtin/markdown-docs.ts",
      "destination": "../../core/path-resolver.js:resolveArchlettePath",
      "stereotype": "import"
    },
    {
      "description": "imports ResolvedStageNode",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node.ts",
      "destination": "../../core/types-aac.js:ResolvedStageNode",
      "stereotype": "type-import"
    },
    {
      "description": "imports ArchletteIR",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node.ts",
      "destination": "../../core/types-ir.js:ArchletteIR",
      "stereotype": "type-import"
    },
    {
      "description": "imports PipelineContext",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node.ts",
      "destination": "../../core/types.js:PipelineContext",
      "stereotype": "type-import"
    },
    {
      "description": "imports ExtractorInputs",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node.ts",
      "destination": "./basic-node/types.js:ExtractorInputs",
      "stereotype": "type-import"
    },
    {
      "description": "imports findSourceFiles",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node.ts",
      "destination": "./basic-node/file-finder.js:findSourceFiles",
      "stereotype": "import"
    },
    {
      "description": "imports findPackageJsonFiles",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node.ts",
      "destination": "./basic-node/file-finder.js:findPackageJsonFiles",
      "stereotype": "import"
    },
    {
      "description": "imports readPackageInfo",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node.ts",
      "destination": "./basic-node/file-finder.js:readPackageInfo",
      "stereotype": "import"
    },
    {
      "description": "imports findNearestPackage",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node.ts",
      "destination": "./basic-node/file-finder.js:findNearestPackage",
      "stereotype": "import"
    },
    {
      "description": "imports parseFiles",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node.ts",
      "destination": "./basic-node/file-parser.js:parseFiles",
      "stereotype": "import"
    },
    {
      "description": "imports mapToIR",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node.ts",
      "destination": "./basic-node/to-ir-mapper.js:mapToIR",
      "stereotype": "import"
    },
    {
      "description": "imports ResolvedStageNode",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler.ts",
      "destination": "../../core/types-aac.js:ResolvedStageNode",
      "stereotype": "type-import"
    },
    {
      "description": "imports ArchletteIR",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler.ts",
      "destination": "../../core/types-ir.js:ArchletteIR",
      "stereotype": "type-import"
    },
    {
      "description": "imports PipelineContext",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler.ts",
      "destination": "../../core/types.js:PipelineContext",
      "stereotype": "type-import"
    },
    {
      "description": "imports emptyIR",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler.ts",
      "destination": "../../core/types-ir.js:emptyIR",
      "stereotype": "import"
    },
    {
      "description": "imports ExtractorInputs",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler.ts",
      "destination": "./basic-wrangler/types.js:ExtractorInputs",
      "stereotype": "type-import"
    },
    {
      "description": "imports findWranglerFiles",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler.ts",
      "destination": "./basic-wrangler/file-finder.js:findWranglerFiles",
      "stereotype": "import"
    },
    {
      "description": "imports parseWranglerFile",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler.ts",
      "destination": "./basic-wrangler/wrangler-parser.js:parseWranglerFile",
      "stereotype": "import"
    },
    {
      "description": "imports mapToIR",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler.ts",
      "destination": "./basic-wrangler/to-ir-mapper.js:mapToIR",
      "stereotype": "import"
    },
    {
      "description": "imports ArchletteIR",
      "source": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "destination": "../../core/types-ir.js:ArchletteIR",
      "stereotype": "type-import"
    },
    {
      "description": "imports Container",
      "source": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "destination": "../../core/types-ir.js:Container",
      "stereotype": "type-import"
    },
    {
      "description": "imports Component",
      "source": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "destination": "../../core/types-ir.js:Component",
      "stereotype": "type-import"
    },
    {
      "description": "imports CodeItem",
      "source": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "destination": "../../core/types-ir.js:CodeItem",
      "stereotype": "type-import"
    },
    {
      "description": "imports Relationship",
      "source": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "destination": "../../core/types-ir.js:Relationship",
      "stereotype": "type-import"
    },
    {
      "description": "imports ResolvedStageNode",
      "source": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "destination": "../../core/types-aac.js:ResolvedStageNode",
      "stereotype": "type-import"
    },
    {
      "description": "imports VIEW_NAMES",
      "source": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "destination": "../../core/constants.js:VIEW_NAMES",
      "stereotype": "import"
    },
    {
      "description": "imports * as nunjucks",
      "source": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "destination": "nunjucks:* as nunjucks",
      "stereotype": "import"
    },
    {
      "description": "imports fileURLToPath",
      "source": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "destination": "node:url:fileURLToPath",
      "stereotype": "import"
    },
    {
      "description": "imports join",
      "source": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "destination": "node:path:join",
      "stereotype": "import"
    },
    {
      "description": "imports dirname",
      "source": "C:/Users/chris/git/archlette/src/generators/builtin/structurizr.ts",
      "destination": "node:path:dirname",
      "stereotype": "import"
    },
    {
      "description": "imports * as fs",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/plantuml-render.ts",
      "destination": "node:fs:* as fs",
      "stereotype": "import"
    },
    {
      "description": "imports * as path",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/plantuml-render.ts",
      "destination": "node:path:* as path",
      "stereotype": "import"
    },
    {
      "description": "imports execSync",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/plantuml-render.ts",
      "destination": "node:child_process:execSync",
      "stereotype": "import"
    },
    {
      "description": "imports PipelineContext",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/plantuml-render.ts",
      "destination": "../../core/types.js:PipelineContext",
      "stereotype": "type-import"
    },
    {
      "description": "imports findPlantUML",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/plantuml-render.ts",
      "destination": "../../core/tool-manager.js:findPlantUML",
      "stereotype": "import"
    },
    {
      "description": "imports requireJava",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/plantuml-render.ts",
      "destination": "../../core/tool-manager.js:requireJava",
      "stereotype": "import"
    },
    {
      "description": "imports resolveArchlettePath",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/plantuml-render.ts",
      "destination": "../../core/path-resolver.js:resolveArchlettePath",
      "stereotype": "import"
    },
    {
      "description": "imports * as fs",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/structurizr-export.ts",
      "destination": "node:fs:* as fs",
      "stereotype": "import"
    },
    {
      "description": "imports * as path",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/structurizr-export.ts",
      "destination": "node:path:* as path",
      "stereotype": "import"
    },
    {
      "description": "imports execSync",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/structurizr-export.ts",
      "destination": "node:child_process:execSync",
      "stereotype": "import"
    },
    {
      "description": "imports PipelineContext",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/structurizr-export.ts",
      "destination": "../../core/types.js:PipelineContext",
      "stereotype": "type-import"
    },
    {
      "description": "imports findStructurizrCLI",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/structurizr-export.ts",
      "destination": "../../core/tool-manager.js:findStructurizrCLI",
      "stereotype": "import"
    },
    {
      "description": "imports requireJava",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/structurizr-export.ts",
      "destination": "../../core/tool-manager.js:requireJava",
      "stereotype": "import"
    },
    {
      "description": "imports resolveArchlettePath",
      "source": "C:/Users/chris/git/archlette/src/renderers/builtin/structurizr-export.ts",
      "destination": "../../core/path-resolver.js:resolveArchlettePath",
      "stereotype": "import"
    },
    {
      "description": "imports zArchletteIR",
      "source": "C:/Users/chris/git/archlette/src/validators/builtin/base-validator.ts",
      "destination": "../../core/types-ir.js:zArchletteIR",
      "stereotype": "import"
    },
    {
      "description": "imports ArchletteValidator",
      "source": "C:/Users/chris/git/archlette/src/validators/builtin/base-validator.ts",
      "destination": "../../core/stage-interfaces.js:ArchletteValidator",
      "stereotype": "type-import"
    },
    {
      "description": "imports ClassDeclaration",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "ts-morph:ClassDeclaration",
      "stereotype": "type-import"
    },
    {
      "description": "imports SourceFile",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "ts-morph:SourceFile",
      "stereotype": "type-import"
    },
    {
      "description": "imports MethodDeclaration",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "ts-morph:MethodDeclaration",
      "stereotype": "type-import"
    },
    {
      "description": "imports PropertyDeclaration",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "ts-morph:PropertyDeclaration",
      "stereotype": "type-import"
    },
    {
      "description": "imports Scope",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "ts-morph:Scope",
      "stereotype": "import"
    },
    {
      "description": "imports createLogger",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "../../../core/logger.js:createLogger",
      "stereotype": "import"
    },
    {
      "description": "imports ExtractedClass",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "./types.js:ExtractedClass",
      "stereotype": "type-import"
    },
    {
      "description": "imports ExtractedMethod",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "./types.js:ExtractedMethod",
      "stereotype": "type-import"
    },
    {
      "description": "imports ExtractedProperty",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "./types.js:ExtractedProperty",
      "stereotype": "type-import"
    },
    {
      "description": "imports ParameterInfo",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "./types.js:ParameterInfo",
      "stereotype": "type-import"
    },
    {
      "description": "imports extractDocumentation",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "./doc-extractor.js:extractDocumentation",
      "stereotype": "import"
    },
    {
      "description": "imports extractDeprecation",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "./doc-extractor.js:extractDeprecation",
      "stereotype": "import"
    },
    {
      "description": "imports extractParameterDescriptions",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "./doc-extractor.js:extractParameterDescriptions",
      "stereotype": "import"
    },
    {
      "description": "imports extractReturnDescription",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/class-extractor.ts",
      "destination": "./doc-extractor.js:extractReturnDescription",
      "stereotype": "import"
    },
    {
      "description": "imports SourceFile",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "destination": "ts-morph:SourceFile",
      "stereotype": "type-import"
    },
    {
      "description": "imports Node",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "destination": "ts-morph:Node",
      "stereotype": "type-import"
    },
    {
      "description": "imports JSDoc",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "destination": "ts-morph:JSDoc",
      "stereotype": "type-import"
    },
    {
      "description": "imports JSDocTag",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "destination": "ts-morph:JSDocTag",
      "stereotype": "type-import"
    },
    {
      "description": "imports SyntaxKind",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "destination": "ts-morph:SyntaxKind",
      "stereotype": "import"
    },
    {
      "description": "imports nameToId",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/component-detector.ts",
      "destination": "../../../core/constants.js:nameToId",
      "stereotype": "import"
    },
    {
      "description": "imports JSDoc",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts",
      "destination": "ts-morph:JSDoc",
      "stereotype": "import"
    },
    {
      "description": "imports JSDocTag",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts",
      "destination": "ts-morph:JSDocTag",
      "stereotype": "import"
    },
    {
      "description": "imports DocInfo",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts",
      "destination": "./types.js:DocInfo",
      "stereotype": "type-import"
    },
    {
      "description": "imports DeprecationInfo",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/doc-extractor.ts",
      "destination": "./types.js:DeprecationInfo",
      "stereotype": "type-import"
    },
    {
      "description": "imports globby",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts",
      "destination": "globby:globby",
      "stereotype": "import"
    },
    {
      "description": "imports sep",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts",
      "destination": "node:path:sep",
      "stereotype": "import"
    },
    {
      "description": "imports relative",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts",
      "destination": "node:path:relative",
      "stereotype": "import"
    },
    {
      "description": "imports createLogger",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts",
      "destination": "../../../core/logger.js:createLogger",
      "stereotype": "import"
    },
    {
      "description": "imports ExtractorInputs",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts",
      "destination": "./types.js:ExtractorInputs",
      "stereotype": "type-import"
    },
    {
      "description": "imports PackageInfo",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-finder.ts",
      "destination": "./types.js:PackageInfo",
      "stereotype": "type-import"
    },
    {
      "description": "imports Project",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "ts-morph:Project",
      "stereotype": "import"
    },
    {
      "description": "imports ts",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "ts-morph:ts",
      "stereotype": "import"
    },
    {
      "description": "imports createLogger",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "../../../core/logger.js:createLogger",
      "stereotype": "import"
    },
    {
      "description": "imports FileExtraction",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "./types.js:FileExtraction",
      "stereotype": "type-import"
    },
    {
      "description": "imports extractClasses",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "./class-extractor.js:extractClasses",
      "stereotype": "import"
    },
    {
      "description": "imports extractFunctions",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "./function-extractor.js:extractFunctions",
      "stereotype": "import"
    },
    {
      "description": "imports extractArrowFunctions",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "./function-extractor.js:extractArrowFunctions",
      "stereotype": "import"
    },
    {
      "description": "imports extractTypeAliases",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "./type-extractor.js:extractTypeAliases",
      "stereotype": "import"
    },
    {
      "description": "imports extractInterfaces",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "./type-extractor.js:extractInterfaces",
      "stereotype": "import"
    },
    {
      "description": "imports extractImports",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "./import-extractor.js:extractImports",
      "stereotype": "import"
    },
    {
      "description": "imports extractFileComponent",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "./component-detector.js:extractFileComponent",
      "stereotype": "import"
    },
    {
      "description": "imports extractFileActors",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "./component-detector.js:extractFileActors",
      "stereotype": "import"
    },
    {
      "description": "imports extractFileRelationships",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/file-parser.ts",
      "destination": "./component-detector.js:extractFileRelationships",
      "stereotype": "import"
    },
    {
      "description": "imports Node",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "destination": "ts-morph:Node",
      "stereotype": "import"
    },
    {
      "description": "imports FunctionDeclaration",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "destination": "ts-morph:FunctionDeclaration",
      "stereotype": "import"
    },
    {
      "description": "imports SourceFile",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "destination": "ts-morph:SourceFile",
      "stereotype": "import"
    },
    {
      "description": "imports createLogger",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "destination": "../../../core/logger.js:createLogger",
      "stereotype": "import"
    },
    {
      "description": "imports ExtractedFunction",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "destination": "./types.js:ExtractedFunction",
      "stereotype": "type-import"
    },
    {
      "description": "imports ParameterInfo",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "destination": "./types.js:ParameterInfo",
      "stereotype": "type-import"
    },
    {
      "description": "imports extractDocumentation",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "destination": "./doc-extractor.js:extractDocumentation",
      "stereotype": "import"
    },
    {
      "description": "imports extractDeprecation",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "destination": "./doc-extractor.js:extractDeprecation",
      "stereotype": "import"
    },
    {
      "description": "imports extractParameterDescriptions",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "destination": "./doc-extractor.js:extractParameterDescriptions",
      "stereotype": "import"
    },
    {
      "description": "imports extractReturnDescription",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/function-extractor.ts",
      "destination": "./doc-extractor.js:extractReturnDescription",
      "stereotype": "import"
    },
    {
      "description": "imports SourceFile",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/import-extractor.ts",
      "destination": "ts-morph:SourceFile",
      "stereotype": "type-import"
    },
    {
      "description": "imports createLogger",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/import-extractor.ts",
      "destination": "../../../core/logger.js:createLogger",
      "stereotype": "import"
    },
    {
      "description": "imports ExtractedImport",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/import-extractor.ts",
      "destination": "./types.js:ExtractedImport",
      "stereotype": "type-import"
    },
    {
      "description": "imports ArchletteIR",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "../../../core/types-ir.js:ArchletteIR",
      "stereotype": "type-import"
    },
    {
      "description": "imports CodeItem",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "../../../core/types-ir.js:CodeItem",
      "stereotype": "type-import"
    },
    {
      "description": "imports System",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "../../../core/types-ir.js:System",
      "stereotype": "type-import"
    },
    {
      "description": "imports Relationship",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "../../../core/types-ir.js:Relationship",
      "stereotype": "type-import"
    },
    {
      "description": "imports Component",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "../../../core/types-ir.js:Component",
      "stereotype": "type-import"
    },
    {
      "description": "imports FileExtraction",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "./types.js:FileExtraction",
      "stereotype": "type-import"
    },
    {
      "description": "imports PackageInfo",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "./types.js:PackageInfo",
      "stereotype": "type-import"
    },
    {
      "description": "imports ExtractedClass",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "./types.js:ExtractedClass",
      "stereotype": "type-import"
    },
    {
      "description": "imports ExtractedFunction",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "./types.js:ExtractedFunction",
      "stereotype": "type-import"
    },
    {
      "description": "imports ExtractedMethod",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "./types.js:ExtractedMethod",
      "stereotype": "type-import"
    },
    {
      "description": "imports ExtractedImport",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "./types.js:ExtractedImport",
      "stereotype": "type-import"
    },
    {
      "description": "imports readFileSync",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "node:fs:readFileSync",
      "stereotype": "import"
    },
    {
      "description": "imports resolve",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "node:path:resolve",
      "stereotype": "import"
    },
    {
      "description": "imports TAGS",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "../../../core/constants.js:TAGS",
      "stereotype": "import"
    },
    {
      "description": "imports DEFAULT_CONTAINER_ID",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "../../../core/constants.js:DEFAULT_CONTAINER_ID",
      "stereotype": "import"
    },
    {
      "description": "imports IR_VERSION",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "../../../core/constants.js:IR_VERSION",
      "stereotype": "import"
    },
    {
      "description": "imports nameToId",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/to-ir-mapper.ts",
      "destination": "../../../core/constants.js:nameToId",
      "stereotype": "import"
    },
    {
      "description": "imports SourceFile",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/type-extractor.ts",
      "destination": "ts-morph:SourceFile",
      "stereotype": "type-import"
    },
    {
      "description": "imports createLogger",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/type-extractor.ts",
      "destination": "../../../core/logger.js:createLogger",
      "stereotype": "import"
    },
    {
      "description": "imports ExtractedType",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/type-extractor.ts",
      "destination": "./types.js:ExtractedType",
      "stereotype": "type-import"
    },
    {
      "description": "imports ExtractedInterface",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/type-extractor.ts",
      "destination": "./types.js:ExtractedInterface",
      "stereotype": "type-import"
    },
    {
      "description": "imports extractDocumentation",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/type-extractor.ts",
      "destination": "./doc-extractor.js:extractDocumentation",
      "stereotype": "import"
    },
    {
      "description": "imports extractDeprecation",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-node/type-extractor.ts",
      "destination": "./doc-extractor.js:extractDeprecation",
      "stereotype": "import"
    },
    {
      "description": "imports globby",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/file-finder.ts",
      "destination": "globby:globby",
      "stereotype": "import"
    },
    {
      "description": "imports ExtractorInputs",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/file-finder.ts",
      "destination": "./types.js:ExtractorInputs",
      "stereotype": "type-import"
    },
    {
      "description": "imports ArchletteIR",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "destination": "../../../core/types-ir.js:ArchletteIR",
      "stereotype": "type-import"
    },
    {
      "description": "imports System",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "destination": "../../../core/types-ir.js:System",
      "stereotype": "type-import"
    },
    {
      "description": "imports ContainerInstance",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "destination": "../../../core/types-ir.js:ContainerInstance",
      "stereotype": "type-import"
    },
    {
      "description": "imports Relationship",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "destination": "../../../core/types-ir.js:Relationship",
      "stereotype": "type-import"
    },
    {
      "description": "imports WranglerConfig",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "destination": "./types.js:WranglerConfig",
      "stereotype": "type-import"
    },
    {
      "description": "imports IR_VERSION",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "destination": "../../../core/constants.js:IR_VERSION",
      "stereotype": "import"
    },
    {
      "description": "imports getEnvironments",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "destination": "./wrangler-parser.js:getEnvironments",
      "stereotype": "import"
    },
    {
      "description": "imports getEnvironmentConfig",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/to-ir-mapper.ts",
      "destination": "./wrangler-parser.js:getEnvironmentConfig",
      "stereotype": "import"
    },
    {
      "description": "imports readFileSync",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "destination": "node:fs:readFileSync",
      "stereotype": "import"
    },
    {
      "description": "imports parse",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "destination": "smol-toml:parse",
      "stereotype": "import"
    },
    {
      "description": "imports createLogger",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "destination": "../../../core/logger.js:createLogger",
      "stereotype": "import"
    },
    {
      "description": "imports WranglerConfig",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "destination": "./types.js:WranglerConfig",
      "stereotype": "type-import"
    },
    {
      "description": "imports ServiceBinding",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "destination": "./types.js:ServiceBinding",
      "stereotype": "type-import"
    },
    {
      "description": "imports KVBinding",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "destination": "./types.js:KVBinding",
      "stereotype": "type-import"
    },
    {
      "description": "imports R2Binding",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "destination": "./types.js:R2Binding",
      "stereotype": "type-import"
    },
    {
      "description": "imports D1Binding",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "destination": "./types.js:D1Binding",
      "stereotype": "type-import"
    },
    {
      "description": "imports DurableObjectBinding",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "destination": "./types.js:DurableObjectBinding",
      "stereotype": "type-import"
    },
    {
      "description": "imports QueueBinding",
      "source": "C:/Users/chris/git/archlette/src/extractors/builtin/basic-wrangler/wrangler-parser.ts",
      "destination": "./types.js:QueueBinding",
      "stereotype": "type-import"
    }
  ],
  "deploymentRelationships": []
}