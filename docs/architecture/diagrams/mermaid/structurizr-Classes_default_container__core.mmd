graph TB
  linkStyle default fill:#ffffff

  subgraph diagram ["Application - Application - Components"]
    style diagram fill:#ffffff,stroke:#ffffff

    subgraph 8 ["Application"]
      style 8 fill:#ffffff,stroke:#9a9a9a,color:#9a9a9a

      30["<div style='font-weight: bold'>core__nametoid</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Convert a name to a<br />normalized ID Used for<br />consistent ID generation<br />across extractors and mappers</div>"]
      style 30 fill:#dddddd,stroke:#9a9a9a,color:#000000
      31["<div style='font-weight: bold'>core__formattimestamp</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Format timestamp as ISO 8601<br />(local time)</div>"]
      style 31 fill:#dddddd,stroke:#9a9a9a,color:#000000
      32["<div style='font-weight: bold'>core__formatlogmessage</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Format log message with<br />timestamp, level, and context</div>"]
      style 32 fill:#dddddd,stroke:#9a9a9a,color:#000000
      33["<div style='font-weight: bold'>core__createlogger</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Create a logger instance</div>"]
      style 33 fill:#dddddd,stroke:#9a9a9a,color:#000000
      34["<div style='font-weight: bold'>core__loadmodulefrompath</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Dynamically load an ESM<br />module from a path or module<br />specifier</div>"]
      style 34 fill:#dddddd,stroke:#9a9a9a,color:#000000
      35["<div style='font-weight: bold'>core__getclidir</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div>"]
      style 35 fill:#dddddd,stroke:#9a9a9a,color:#000000
      36["<div style='font-weight: bold'>core__expandtilde</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div>"]
      style 36 fill:#dddddd,stroke:#9a9a9a,color:#000000
      37["<div style='font-weight: bold'>core__resolvearchlettepath</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Core path resolver honoring<br />Archlette rules (no file<br />existence checks). - "~" -><br />user home - "/" -> absolute -<br />else -> relative to CLI dir</div>"]
      style 37 fill:#dddddd,stroke:#9a9a9a,color:#000000
      38["<div style='font-weight: bold'>core__resolvemoduleentry</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Resolve a module entry by<br />probing: 1) Exact path 2)<br />With extensions: .ts then .js<br />3) If directory: index.ts<br />then index.js</div>"]
      style 38 fill:#dddddd,stroke:#9a9a9a,color:#000000
      39["<div style='font-weight: bold'>core__tofileurl</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div>"]
      style 39 fill:#dddddd,stroke:#9a9a9a,color:#000000
      40["<div style='font-weight: bold'>core__writefile</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Write content to a file,<br />creating parent directories<br />if needed.</div>"]
      style 40 fill:#dddddd,stroke:#9a9a9a,color:#000000
      41["<div style='font-weight: bold'>core__loadextractormodule</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div>"]
      style 41 fill:#dddddd,stroke:#9a9a9a,color:#000000
      42["<div style='font-weight: bold'>core__loadvalidatormodule</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div>"]
      style 42 fill:#dddddd,stroke:#9a9a9a,color:#000000
      43["<div style='font-weight: bold'>core__loadgeneratormodule</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div>"]
      style 43 fill:#dddddd,stroke:#9a9a9a,color:#000000
      44["<div style='font-weight: bold'>core__loadrenderermodule</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div>"]
      style 44 fill:#dddddd,stroke:#9a9a9a,color:#000000
      45["<div style='font-weight: bold'>core__loaddocmodule</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div>"]
      style 45 fill:#dddddd,stroke:#9a9a9a,color:#000000
      46["<div style='font-weight: bold'>core__getcachedir</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Get the Archlette cache<br />directory</div>"]
      style 46 fill:#dddddd,stroke:#9a9a9a,color:#000000
      47["<div style='font-weight: bold'>core__ensurecachedir</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Ensure cache directory exists</div>"]
      style 47 fill:#dddddd,stroke:#9a9a9a,color:#000000
      48["<div style='font-weight: bold'>core__commandexistsinpath</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Check if a command exists in<br />PATH</div>"]
      style 48 fill:#dddddd,stroke:#9a9a9a,color:#000000
      49["<div style='font-weight: bold'>core__downloadfile</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Download a file from URL to<br />destination</div>"]
      style 49 fill:#dddddd,stroke:#9a9a9a,color:#000000
      50["<div style='font-weight: bold'>core__extractzip</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Extract a ZIP file (simple<br />extraction for Structurizr<br />CLI)</div>"]
      style 50 fill:#dddddd,stroke:#9a9a9a,color:#000000
      51["<div style='font-weight: bold'>core__makeexecutable</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Make file executable (Unix<br />only)</div>"]
      style 51 fill:#dddddd,stroke:#9a9a9a,color:#000000
      52["<div style='font-weight: bold'>core__downloadstructurizr</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Download and install<br />Structurizr CLI to cache</div>"]
      style 52 fill:#dddddd,stroke:#9a9a9a,color:#000000
      53["<div style='font-weight: bold'>core__downloadplantuml</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Download and install PlantUML<br />to cache</div>"]
      style 53 fill:#dddddd,stroke:#9a9a9a,color:#000000
      54["<div style='font-weight: bold'>core__findstructurizrcli</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Find or download Structurizr<br />CLI</div>"]
      style 54 fill:#dddddd,stroke:#9a9a9a,color:#000000
      55["<div style='font-weight: bold'>core__findplantuml</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Find or download PlantUML JAR</div>"]
      style 55 fill:#dddddd,stroke:#9a9a9a,color:#000000
      56["<div style='font-weight: bold'>core__checkjava</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Verify Java is available</div>"]
      style 56 fill:#dddddd,stroke:#9a9a9a,color:#000000
      57["<div style='font-weight: bold'>core__requirejava</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Validate Java is installed<br />(throw if not)</div>"]
      style 57 fill:#dddddd,stroke:#9a9a9a,color:#000000
      58["<div style='font-weight: bold'>core__resolveconfig</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>For each stage, resolve<br />includes/excludes for each<br />node: - If node omits<br />includes/excludes, inherit<br />from defaults.</div>"]
      style 58 fill:#dddddd,stroke:#9a9a9a,color:#000000
    end

  end