graph TB
  linkStyle default fill:#ffffff

  subgraph diagram ["@chrislyons-dev/archlette - @chrislyons-dev/archlette - Components"]
    style diagram fill:#ffffff,stroke:#ffffff

    subgraph 4 ["@chrislyons-dev/archlette"]
      style 4 fill:#ffffff,stroke:#9a9a9a,color:#9a9a9a

      24["<div style='font-weight: bold'>3-generate/index.ts::run</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Execute the generation stage</div>"]
      style 24 fill:#dddddd,stroke:#9a9a9a,color:#000000
      56["<div style='font-weight: bold'>structurizr.ts::structurizrgenerator</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate Structurizr DSL from<br />ArchletteIR</div>"]
      style 56 fill:#dddddd,stroke:#9a9a9a,color:#000000
      57["<div style='font-weight: bold'>structurizr.ts::generateallactorrelationships</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate all actor-related<br />relationships (bidirectional)<br />Includes: 1. Actor →<br />Component (from<br />actor.targets) - users<br />interacting with system 2.<br />Component → Actor (from<br />componentRelationships) -<br />system using external actors<br />Structurizr automatically<br />aggregates relationships in<br />views: - System Context view:<br />Shows as actor ↔ system -<br />Container view: Shows as<br />actor ↔ container - Component<br />view: Shows actual actor ↔<br />component relationships</div>"]
      style 57 fill:#dddddd,stroke:#9a9a9a,color:#000000
      58["<div style='font-weight: bold'>structurizr.ts::generatemodel</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate the model section of<br />the DSL</div>"]
      style 58 fill:#dddddd,stroke:#9a9a9a,color:#000000
      59["<div style='font-weight: bold'>structurizr.ts::generateviews</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate the views section of<br />the DSL</div>"]
      style 59 fill:#dddddd,stroke:#9a9a9a,color:#000000
      60["<div style='font-weight: bold'>structurizr.ts::generatesystemcontextview</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate System Context view<br />Shows actors and the system<br />boundary. Structurizr<br />automatically aggregates<br />actor → component<br />relationships to actor →<br />system for this view since<br />components are not explicitly<br />included.</div>"]
      style 60 fill:#dddddd,stroke:#9a9a9a,color:#000000
      61["<div style='font-weight: bold'>structurizr.ts::generatecontainerview</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate Container view Shows<br />actors, containers, and their<br />relationships. Actor →<br />component relationships are<br />automatically aggregated to<br />actor → container level by<br />Structurizr since components<br />are not shown in this view.</div>"]
      style 61 fill:#dddddd,stroke:#9a9a9a,color:#000000
      62["<div style='font-weight: bold'>structurizr.ts::generatecomponentview</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate Component view for a<br />container (excludes Code<br />elements) Shows actors,<br />components within the<br />container, and their<br />relationships. Actor →<br />component relationships are<br />shown explicitly at this<br />level. Code elements are<br />excluded to keep the view<br />focused on architecture.</div>"]
      style 62 fill:#dddddd,stroke:#9a9a9a,color:#000000
      63["<div style='font-weight: bold'>structurizr.ts::generateclassview</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate Class view for a<br />component (only Code elements<br />within that component) This<br />supports the drill-down<br />model: System → Container →<br />Component → Code Note:<br />Component views in<br />Structurizr require a<br />container ID, not a component<br />ID. We use the component's<br />container and filter to show<br />only this component's code.</div>"]
      style 63 fill:#dddddd,stroke:#9a9a9a,color:#000000
      64["<div style='font-weight: bold'>structurizr.ts::generateactor</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate DSL for an actor<br />(person or external system)</div>"]
      style 64 fill:#dddddd,stroke:#9a9a9a,color:#000000
      65["<div style='font-weight: bold'>structurizr.ts::generatecontainer</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate DSL for a container<br />with its components</div>"]
      style 65 fill:#dddddd,stroke:#9a9a9a,color:#000000
      66["<div style='font-weight: bold'>structurizr.ts::generatecomponent</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate DSL for a component</div>"]
      style 66 fill:#dddddd,stroke:#9a9a9a,color:#000000
      67["<div style='font-weight: bold'>structurizr.ts::generatecodeascomponent</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate DSL for a code item<br />as a component Always tagged<br />with "Code" to separate from<br />logical components in views</div>"]
      style 67 fill:#dddddd,stroke:#9a9a9a,color:#000000
      68["<div style='font-weight: bold'>structurizr.ts::generateuniquecodename</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate a unique name for a<br />code item to avoid naming<br />collisions Extracts file<br />context from the code ID to<br />create a unique display name.<br />Example:<br />"1-extract/index.ts::run" or<br />"cli.ts::run"</div>"]
      style 68 fill:#dddddd,stroke:#9a9a9a,color:#000000
      69["<div style='font-weight: bold'>structurizr.ts::generaterelationship</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate DSL for a<br />relationship</div>"]
      style 69 fill:#dddddd,stroke:#9a9a9a,color:#000000
      70["<div style='font-weight: bold'>structurizr.ts::buildtechnologystring</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Build technology string from<br />relationship metadata</div>"]
      style 70 fill:#dddddd,stroke:#9a9a9a,color:#000000
      71["<div style='font-weight: bold'>structurizr.ts::generatedeployment</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Generate DSL for a deployment<br />environment</div>"]
      style 71 fill:#dddddd,stroke:#9a9a9a,color:#000000
      72["<div style='font-weight: bold'>structurizr.ts::sanitizeid</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Sanitize ID for DSL (remove<br />special characters, convert<br />to camelCase)</div>"]
      style 72 fill:#dddddd,stroke:#9a9a9a,color:#000000
      73["<div style='font-weight: bold'>structurizr.ts::escapestring</div><div style='font-size: 70%; margin-top: 0px'>[Component: function]</div><div style='font-size: 80%; margin-top:10px'>Escape special characters in<br />strings for DSL</div>"]
      style 73 fill:#dddddd,stroke:#9a9a9a,color:#000000
    end

  end