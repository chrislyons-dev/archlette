@startuml
set separator none
title Application - Application - Components

top to bottom direction
skinparam ranksep 60
skinparam nodesep 30

skinparam {
  arrowFontSize 10
  defaultTextAlignment center
  wrapWidth 200
  maxMessageSize 100
  defaultFontName "Arial"
}

hide stereotype

skinparam rectangle<<Application.Application.basicastrobasicAstroExtractor>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastrocreateSyntheticRenderFunction>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroextractCodeFromFrontmatter>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroextractComponentName>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroextractComponentUsage>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroextractFileActors>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroextractFileComponent>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroextractFileRelationships>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroextractFrontmatter>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroextractImports>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroextractJSDocBlocks>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastrofindClientDirective>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastrofindNearestPackage>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastrofindPackageJsonFiles>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastrofindSlots>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastrofindSourceFiles>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroinferComponentFromPath>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastromapClassToCodeItems>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastromapFunctionToCodeItem>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastromapToIR>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroparseActorTag>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroparseFiles>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroparseJSDocBlock>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroparseUsesTag>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicastroreadPackageInfo>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application>> {
  BorderColor #2e6295
  FontColor #2e6295
  shadowing false
}

rectangle "Application\n<size:10>[Container: Application]</size>" <<Application.Application>> {
  rectangle "==basic-astro.extractJSDocBlocks\n<size:10>[Component: function]</size>\n\nExtract all JSDoc comment blocks from source code Matches /** ... *\\/ style comments and parses their tags" <<Application.Application.basicastroextractJSDocBlocks>> as Application.Application.basicastroextractJSDocBlocks
  rectangle "==basic-astro.parseJSDocBlock\n<size:10>[Component: function]</size>\n\nParse a single JSDoc comment block into description and tags" <<Application.Application.basicastroparseJSDocBlock>> as Application.Application.basicastroparseJSDocBlock
  rectangle "==basic-astro.extractFileComponent\n<size:10>[Component: function]</size>\n\nExtract component information from frontmatter JSDoc Checks for" <<Application.Application.basicastroextractFileComponent>> as Application.Application.basicastroextractFileComponent
  rectangle "==basic-astro.extractComponentName\n<size:10>[Component: function]</size>\n\nExtract component name from a JSDoc tag value Handles formats like: - ComponentName - ComponentName - Description (space-dash-space separator) - path/to/module - My-Component (dashes in names are preserved)" <<Application.Application.basicastroextractComponentName>> as Application.Application.basicastroextractComponentName
  rectangle "==basic-astro.extractFileActors\n<size:10>[Component: function]</size>\n\nExtract actors from frontmatter JSDoc Looks for" <<Application.Application.basicastroextractFileActors>> as Application.Application.basicastroextractFileActors
  rectangle "==basic-astro.parseActorTag\n<size:10>[Component: function]</size>\n\nParse an" <<Application.Application.basicastroparseActorTag>> as Application.Application.basicastroparseActorTag
  rectangle "==basic-astro.extractFileRelationships\n<size:10>[Component: function]</size>\n\nExtract relationships from frontmatter JSDoc Looks for" <<Application.Application.basicastroextractFileRelationships>> as Application.Application.basicastroextractFileRelationships
  rectangle "==basic-astro.parseUsesTag\n<size:10>[Component: function]</size>\n\nParse a" <<Application.Application.basicastroparseUsesTag>> as Application.Application.basicastroparseUsesTag
  rectangle "==basic-astro.inferComponentFromPath\n<size:10>[Component: function]</size>\n\nInfer component name from file path - Files in subdirectories use the immediate parent folder name - Files in root directory use ROOT_COMPONENT_MARKER Examples: - /path/to/project/src/components/Button.astro -> 'components' - /path/to/project/src/Layout.astro -> ROOT_COMPONENT_MARKER" <<Application.Application.basicastroinferComponentFromPath>> as Application.Application.basicastroinferComponentFromPath
  rectangle "==basic-astro.findSourceFiles\n<size:10>[Component: function]</size>\n\nFind Astro source files matching the given patterns" <<Application.Application.basicastrofindSourceFiles>> as Application.Application.basicastrofindSourceFiles
  rectangle "==basic-astro.findPackageJsonFiles\n<size:10>[Component: function]</size>\n\nFind all package.json files in the workspace" <<Application.Application.basicastrofindPackageJsonFiles>> as Application.Application.basicastrofindPackageJsonFiles
  rectangle "==basic-astro.readPackageInfo\n<size:10>[Component: function]</size>\n\nRead package.json and extract metadata" <<Application.Application.basicastroreadPackageInfo>> as Application.Application.basicastroreadPackageInfo
  rectangle "==basic-astro.findNearestPackage\n<size:10>[Component: function]</size>\n\nFind the nearest package.json for a given file" <<Application.Application.basicastrofindNearestPackage>> as Application.Application.basicastrofindNearestPackage
  rectangle "==basic-astro.parseFiles\n<size:10>[Component: function]</size>\n\nParse Astro files using" <<Application.Application.basicastroparseFiles>> as Application.Application.basicastroparseFiles
  rectangle "==basic-astro.extractFrontmatter\n<size:10>[Component: function]</size>\n\nExtract frontmatter content from Astro file Frontmatter is the TypeScript/JavaScript code between --- markers at the top of the file Handles both Unix (\\n) and Windows (\\r\\n) line endings" <<Application.Application.basicastroextractFrontmatter>> as Application.Application.basicastroextractFrontmatter
  rectangle "==basic-astro.extractImports\n<size:10>[Component: function]</size>\n\nExtract import statements from frontmatter" <<Application.Application.basicastroextractImports>> as Application.Application.basicastroextractImports
  rectangle "==basic-astro.findSlots\n<size:10>[Component: function]</size>\n\nFind slot tags in the template" <<Application.Application.basicastrofindSlots>> as Application.Application.basicastrofindSlots
  rectangle "==basic-astro.findClientDirective\n<size:10>[Component: function]</size>\n\nFind client directive in component usage Examples: client:load, client:idle, client:visible, client:media, client:only" <<Application.Application.basicastrofindClientDirective>> as Application.Application.basicastrofindClientDirective
  rectangle "==basic-astro.extractComponentUsage\n<size:10>[Component: function]</size>\n\nExtract component usage from template Finds which imported components are used in the template markup" <<Application.Application.basicastroextractComponentUsage>> as Application.Application.basicastroextractComponentUsage
  rectangle "==basic-astro.mapToIR\n<size:10>[Component: function]</size>\n\nMap file extractions to ArchletteIR Transforms Astro component analysis into standardized architecture representation" <<Application.Application.basicastromapToIR>> as Application.Application.basicastromapToIR
  rectangle "==basic-astro.mapClassToCodeItems\n<size:10>[Component: function]</size>\n\nMap a class to code items (class + methods)" <<Application.Application.basicastromapClassToCodeItems>> as Application.Application.basicastromapClassToCodeItems
  rectangle "==basic-astro.mapFunctionToCodeItem\n<size:10>[Component: function]</size>\n\nMap a function to a code item" <<Application.Application.basicastromapFunctionToCodeItem>> as Application.Application.basicastromapFunctionToCodeItem
  rectangle "==basic-astro.basicAstroExtractor\n<size:10>[Component: function]</size>\n\nExtract architecture information from an Astro codebase" <<Application.Application.basicastrobasicAstroExtractor>> as Application.Application.basicastrobasicAstroExtractor
  rectangle "==basic-astro.extractCodeFromFrontmatter\n<size:10>[Component: function]</size>\n\nExtract TypeScript/JavaScript code from Astro frontmatter Parses the frontmatter as TypeScript and uses basic-node extractors" <<Application.Application.basicastroextractCodeFromFrontmatter>> as Application.Application.basicastroextractCodeFromFrontmatter
  rectangle "==basic-astro.createSyntheticRenderFunction\n<size:10>[Component: function]</size>\n\nCreate a synthetic render function for an Astro component Every Astro component is fundamentally a server-side render function that takes props and returns HTML Function is named after the file (e.g., "index", "about", "Header") so each Astro file has a unique code-level representation" <<Application.Application.basicastrocreateSyntheticRenderFunction>> as Application.Application.basicastrocreateSyntheticRenderFunction
}

@enduml