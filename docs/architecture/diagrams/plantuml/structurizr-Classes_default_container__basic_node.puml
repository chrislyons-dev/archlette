@startuml
set separator none
title Application - Application - Components

top to bottom direction
skinparam ranksep 60
skinparam nodesep 30

skinparam {
  arrowFontSize 10
  defaultTextAlignment center
  wrapWidth 200
  maxMessageSize 100
  defaultFontName "Arial"
}

hide stereotype

skinparam rectangle<<Application.Application.basic_nodebasicNodeExtractor>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractActorsFromJsDoc>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractArrowFunctions>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractClass>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractClasses>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractComponentFromJsDoc>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractComponentName>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractDeprecation>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractDocumentation>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractFileActors>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractFileComponent>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractFileRelationships>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractFunction>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractFunctionParameter>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractFunctions>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractImports>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractInterfaces>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractMethod>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractMethodParameter>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractParameterDescriptions>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractParameterName>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractProperty>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractRelationshipsFromJsDoc>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractReturnDescription>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeextractTypeAliases>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodefindNearestPackage>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodefindPackageJsonFiles>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodefindSourceFiles>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodegenerateId>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodegetDefaultSystem>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodegetFileJsDocs>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeinferComponentFromPath>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodemapClass>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodemapFunction>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodemapImportRelationships>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodemapImportToComponentRelationships>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodemapMethod>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodemapToIR>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodemapVisibility>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeparseActorTag>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeparseFiles>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodeparseUsesTag>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_nodereadPackageInfo>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_noderesolveImportPath>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application>> {
  BorderColor #2e6295
  FontColor #2e6295
  shadowing false
}

rectangle "Application\n<size:10>[Container: Application]</size>" <<Application.Application>> {
  rectangle "==basic_node.extractClasses\n<size:10>[Component: function]</size>\n\nExtract all class declarations from a source file" <<Application.Application.basic_nodeextractClasses>> as Application.Application.basic_nodeextractClasses
  rectangle "==basic_node.extractClass\n<size:10>[Component: function]</size>\n\nExtract information from a single class declaration" <<Application.Application.basic_nodeextractClass>> as Application.Application.basic_nodeextractClass
  rectangle "==basic_node.extractMethod\n<size:10>[Component: function]</size>\n\nExtract method information from a class" <<Application.Application.basic_nodeextractMethod>> as Application.Application.basic_nodeextractMethod
  rectangle "==basic_node.extractProperty\n<size:10>[Component: function]</size>\n\nExtract property information from a class" <<Application.Application.basic_nodeextractProperty>> as Application.Application.basic_nodeextractProperty
  rectangle "==basic_node.extractMethodParameter\n<size:10>[Component: function]</size>\n\nExtract parameter information" <<Application.Application.basic_nodeextractMethodParameter>> as Application.Application.basic_nodeextractMethodParameter
  rectangle "==basic_node.mapVisibility\n<size:10>[Component: function]</size>\n\nMap ts-morph Scope to our visibility string" <<Application.Application.basic_nodemapVisibility>> as Application.Application.basic_nodemapVisibility
  rectangle "==basic_node.getFileJsDocs\n<size:10>[Component: function]</size>\n\nGet JSDoc comments from a source file Checks both the first statement and module-level JSDoc" <<Application.Application.basic_nodegetFileJsDocs>> as Application.Application.basic_nodegetFileJsDocs
  rectangle "==basic_node.extractFileComponent\n<size:10>[Component: function]</size>\n\nExtract component information from file-level JSDoc Checks the first JSDoc comment in the file for" <<Application.Application.basic_nodeextractFileComponent>> as Application.Application.basic_nodeextractFileComponent
  rectangle "==basic_node.extractFileActors\n<size:10>[Component: function]</size>\n\nExtract actors from file-level JSDoc Looks for" <<Application.Application.basic_nodeextractFileActors>> as Application.Application.basic_nodeextractFileActors
  rectangle "==basic_node.extractFileRelationships\n<size:10>[Component: function]</size>\n\nExtract relationships from file-level JSDoc Looks for" <<Application.Application.basic_nodeextractFileRelationships>> as Application.Application.basic_nodeextractFileRelationships
  rectangle "==basic_node.extractComponentFromJsDoc\n<size:10>[Component: function]</size>\n\nExtract component info from a JSDoc node" <<Application.Application.basic_nodeextractComponentFromJsDoc>> as Application.Application.basic_nodeextractComponentFromJsDoc
  rectangle "==basic_node.extractActorsFromJsDoc\n<size:10>[Component: function]</size>\n\nExtract actors from a JSDoc node Parses" <<Application.Application.basic_nodeextractActorsFromJsDoc>> as Application.Application.basic_nodeextractActorsFromJsDoc
  rectangle "==basic_node.parseActorTag\n<size:10>[Component: function]</size>\n\nParse an" <<Application.Application.basic_nodeparseActorTag>> as Application.Application.basic_nodeparseActorTag
  rectangle "==basic_node.extractRelationshipsFromJsDoc\n<size:10>[Component: function]</size>\n\nExtract relationships from a JSDoc node Parses" <<Application.Application.basic_nodeextractRelationshipsFromJsDoc>> as Application.Application.basic_nodeextractRelationshipsFromJsDoc
  rectangle "==basic_node.parseUsesTag\n<size:10>[Component: function]</size>\n\nParse a" <<Application.Application.basic_nodeparseUsesTag>> as Application.Application.basic_nodeparseUsesTag
  rectangle "==basic_node.extractComponentName\n<size:10>[Component: function]</size>\n\nExtract component name from a JSDoc tag Handles formats like: -" <<Application.Application.basic_nodeextractComponentName>> as Application.Application.basic_nodeextractComponentName
  rectangle "==basic_node.inferComponentFromPath\n<size:10>[Component: function]</size>\n\nInfer component name from file path - Files in subdirectories use the immediate parent folder name - Files in root directory use a special marker that will be replaced with container name Examples: - /path/to/project/src/utils/helper.ts -> 'utils' - /path/to/project/src/index.ts -> ROOT_COMPONENT_MARKER - /path/to/project/services/api/client.ts -> 'api'" <<Application.Application.basic_nodeinferComponentFromPath>> as Application.Application.basic_nodeinferComponentFromPath
  rectangle "==basic_node.extractDocumentation\n<size:10>[Component: function]</size>\n\nExtract documentation information from JSDoc" <<Application.Application.basic_nodeextractDocumentation>> as Application.Application.basic_nodeextractDocumentation
  rectangle "==basic_node.extractDeprecation\n<size:10>[Component: function]</size>\n\nExtract deprecation information from JSDoc" <<Application.Application.basic_nodeextractDeprecation>> as Application.Application.basic_nodeextractDeprecation
  rectangle "==basic_node.extractParameterDescriptions\n<size:10>[Component: function]</size>\n\nExtract parameter descriptions from JSDoc" <<Application.Application.basic_nodeextractParameterDescriptions>> as Application.Application.basic_nodeextractParameterDescriptions
  rectangle "==basic_node.extractReturnDescription\n<size:10>[Component: function]</size>\n\nExtract return description from JSDoc" <<Application.Application.basic_nodeextractReturnDescription>> as Application.Application.basic_nodeextractReturnDescription
  rectangle "==basic_node.extractParameterName\n<size:10>[Component: function]</size>\n\nExtract parameter name from" <<Application.Application.basic_nodeextractParameterName>> as Application.Application.basic_nodeextractParameterName
  rectangle "==basic_node.findSourceFiles\n<size:10>[Component: function]</size>\n\nFind source files matching include/exclude patterns" <<Application.Application.basic_nodefindSourceFiles>> as Application.Application.basic_nodefindSourceFiles
  rectangle "==basic_node.findPackageJsonFiles\n<size:10>[Component: function]</size>\n\nFind package.json files within the search paths" <<Application.Application.basic_nodefindPackageJsonFiles>> as Application.Application.basic_nodefindPackageJsonFiles
  rectangle "==basic_node.readPackageInfo\n<size:10>[Component: function]</size>\n\nRead and parse package.json file" <<Application.Application.basic_nodereadPackageInfo>> as Application.Application.basic_nodereadPackageInfo
  rectangle "==basic_node.findNearestPackage\n<size:10>[Component: function]</size>\n\nFind the nearest parent package.json for a given file" <<Application.Application.basic_nodefindNearestPackage>> as Application.Application.basic_nodefindNearestPackage
  rectangle "==basic_node.parseFiles\n<size:10>[Component: function]</size>\n\nParse and extract information from source files" <<Application.Application.basic_nodeparseFiles>> as Application.Application.basic_nodeparseFiles
  rectangle "==basic_node.extractFunctions\n<size:10>[Component: function]</size>\n\nExtract all function declarations from a source file" <<Application.Application.basic_nodeextractFunctions>> as Application.Application.basic_nodeextractFunctions
  rectangle "==basic_node.extractFunction\n<size:10>[Component: function]</size>\n\nExtract information from a single function declaration" <<Application.Application.basic_nodeextractFunction>> as Application.Application.basic_nodeextractFunction
  rectangle "==basic_node.extractFunctionParameter\n<size:10>[Component: function]</size>\n\nExtract parameter information" <<Application.Application.basic_nodeextractFunctionParameter>> as Application.Application.basic_nodeextractFunctionParameter
  rectangle "==basic_node.extractArrowFunctions\n<size:10>[Component: function]</size>\n\nExtract arrow functions assigned to const/let/var Examples: const handleClick = () => {} export const createUser = async (data) => {}" <<Application.Application.basic_nodeextractArrowFunctions>> as Application.Application.basic_nodeextractArrowFunctions
  rectangle "==basic_node.extractImports\n<size:10>[Component: function]</size>\n\nExtract all import declarations from a source file" <<Application.Application.basic_nodeextractImports>> as Application.Application.basic_nodeextractImports
  rectangle "==basic_node.mapToIR\n<size:10>[Component: function]</size>\n\nMap file extractions to ArchletteIR" <<Application.Application.basic_nodemapToIR>> as Application.Application.basic_nodemapToIR
  rectangle "==basic_node.mapFunction\n<size:10>[Component: function]</size>\n\nMap a function to a CodeItem" <<Application.Application.basic_nodemapFunction>> as Application.Application.basic_nodemapFunction
  rectangle "==basic_node.mapClass\n<size:10>[Component: function]</size>\n\nMap a class to a CodeItem" <<Application.Application.basic_nodemapClass>> as Application.Application.basic_nodemapClass
  rectangle "==basic_node.mapMethod\n<size:10>[Component: function]</size>\n\nMap a class method to a CodeItem" <<Application.Application.basic_nodemapMethod>> as Application.Application.basic_nodemapMethod
  rectangle "==basic_node.resolveImportPath\n<size:10>[Component: function]</size>\n\nResolve an import path to an absolute file path Handles relative imports (./file, ../file) and resolves to actual file paths Returns undefined for node_modules imports or unresolvable paths" <<Application.Application.basic_noderesolveImportPath>> as Application.Application.basic_noderesolveImportPath
  rectangle "==basic_node.mapImportToComponentRelationships\n<size:10>[Component: function]</size>\n\nMap imports to component relationships (component-level dependencies)" <<Application.Application.basic_nodemapImportToComponentRelationships>> as Application.Application.basic_nodemapImportToComponentRelationships
  rectangle "==basic_node.mapImportRelationships\n<size:10>[Component: function]</size>\n\nMap imports to relationships (original code-level format for backward compatibility)" <<Application.Application.basic_nodemapImportRelationships>> as Application.Application.basic_nodemapImportRelationships
  rectangle "==basic_node.generateId\n<size:10>[Component: function]</size>\n\nGenerate a unique ID for a code element Format: filePath:symbolName" <<Application.Application.basic_nodegenerateId>> as Application.Application.basic_nodegenerateId
  rectangle "==basic_node.getDefaultSystem\n<size:10>[Component: function]</size>\n\nGet default system info from package.json if available" <<Application.Application.basic_nodegetDefaultSystem>> as Application.Application.basic_nodegetDefaultSystem
  rectangle "==basic_node.extractTypeAliases\n<size:10>[Component: function]</size>\n\nExtract type aliases from a source file Examples: type UserRole = 'admin' | 'user' | 'guest' export type ApiResponse<T> = { data: T; status: number }" <<Application.Application.basic_nodeextractTypeAliases>> as Application.Application.basic_nodeextractTypeAliases
  rectangle "==basic_node.extractInterfaces\n<size:10>[Component: function]</size>\n\nExtract interfaces from a source file Examples: interface User { id: string; name: string } export interface ApiClient { get<T>(url: string): Promise<T> }" <<Application.Application.basic_nodeextractInterfaces>> as Application.Application.basic_nodeextractInterfaces
  rectangle "==basic_node.basicNodeExtractor\n<size:10>[Component: function]</size>\n\nExtract architecture information from a Node.js/TypeScript codebase" <<Application.Application.basic_nodebasicNodeExtractor>> as Application.Application.basic_nodebasicNodeExtractor
}

@enduml