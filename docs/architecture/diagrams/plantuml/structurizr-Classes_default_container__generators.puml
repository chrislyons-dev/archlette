@startuml
set separator none
title Application - Application - Components

top to bottom direction
skinparam ranksep 60
skinparam nodesep 30

skinparam {
  arrowFontSize 10
  defaultTextAlignment center
  wrapWidth 200
  maxMessageSize 100
  defaultFontName "Arial"
}

hide stereotype

skinparam rectangle<<Application.Application.generatorsbuildTechnologyString>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.generatorsescapeString>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.generatorsgenerateAllActorRelationships>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.generatorsgenerateUniqueCodeName>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.generatorsloadDefaultTheme>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.generatorsprepareClassView>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.generatorsprepareComponentView>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.generatorsprepareContainerData>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.generatorsrun>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.generatorssanitizeId>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.generatorsstructurizrGenerator>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application>> {
  BorderColor #2e6295
  FontColor #2e6295
  shadowing false
}

rectangle "Application\n<size:10>[Container: Application]</size>" <<Application.Application>> {
  rectangle "==generators.run\n<size:10>[Component: function]</size>\n\nExecute the generation stage" <<Application.Application.generatorsrun>> as Application.Application.generatorsrun
  rectangle "==generators.loadDefaultTheme\n<size:10>[Component: function]</size>\n\nLoad the default Structurizr theme from templates directory" <<Application.Application.generatorsloadDefaultTheme>> as Application.Application.generatorsloadDefaultTheme
  rectangle "==generators.structurizrGenerator\n<size:10>[Component: function]</size>\n\nGenerate Structurizr DSL from ArchletteIR" <<Application.Application.generatorsstructurizrGenerator>> as Application.Application.generatorsstructurizrGenerator
  rectangle "==generators.prepareContainerData\n<size:10>[Component: function]</size>\n\nPrepare container data with components, code, and relationships for template" <<Application.Application.generatorsprepareContainerData>> as Application.Application.generatorsprepareContainerData
  rectangle "==generators.prepareComponentView\n<size:10>[Component: function]</size>\n\nPrepare component view data for template" <<Application.Application.generatorsprepareComponentView>> as Application.Application.generatorsprepareComponentView
  rectangle "==generators.prepareClassView\n<size:10>[Component: function]</size>\n\nPrepare class view data for template" <<Application.Application.generatorsprepareClassView>> as Application.Application.generatorsprepareClassView
  rectangle "==generators.generateAllActorRelationships\n<size:10>[Component: function]</size>\n\nGenerate all actor-related relationships" <<Application.Application.generatorsgenerateAllActorRelationships>> as Application.Application.generatorsgenerateAllActorRelationships
  rectangle "==generators.generateUniqueCodeName\n<size:10>[Component: function]</size>\n\nGenerate a unique name for a code item to avoid naming collisions" <<Application.Application.generatorsgenerateUniqueCodeName>> as Application.Application.generatorsgenerateUniqueCodeName
  rectangle "==generators.buildTechnologyString\n<size:10>[Component: function]</size>\n\nBuild technology string from relationship metadata" <<Application.Application.generatorsbuildTechnologyString>> as Application.Application.generatorsbuildTechnologyString
  rectangle "==generators.sanitizeId\n<size:10>[Component: function]</size>\n\nSanitize ID for DSL (remove special characters, convert to valid identifier)" <<Application.Application.generatorssanitizeId>> as Application.Application.generatorssanitizeId
  rectangle "==generators.escapeString\n<size:10>[Component: function]</size>\n\nEscape special characters in strings for DSL Structurizr DSL doesn't support \\n escape sequences in strings, so we replace newlines with spaces for cleaner output." <<Application.Application.generatorsescapeString>> as Application.Application.generatorsescapeString
}

@enduml