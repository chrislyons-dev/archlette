@startuml
set separator none
title Application - Application - Components

top to bottom direction
skinparam ranksep 60
skinparam nodesep 30

skinparam {
  arrowFontSize 10
  defaultTextAlignment center
  wrapWidth 200
  maxMessageSize 100
  defaultFontName "Arial"
}

hide stereotype

skinparam rectangle<<Application.Application.CLI>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<FileSystem>> {
  BackgroundColor #999999
  FontColor #ffffff
  BorderColor #6b6b6b
  roundCorner 20
  shadowing false
}
skinparam rectangle<<FileSystem>> {
  BackgroundColor #999999
  FontColor #ffffff
  BorderColor #6b6b6b
  roundCorner 20
  shadowing false
}
skinparam rectangle<<GithubPlantUMLRepo>> {
  BackgroundColor #999999
  FontColor #ffffff
  BorderColor #6b6b6b
  roundCorner 20
  shadowing false
}
skinparam rectangle<<GithubStructurizrRepo>> {
  BackgroundColor #999999
  FontColor #ffffff
  BorderColor #6b6b6b
  roundCorner 20
  shadowing false
}
skinparam rectangle<<LocalSystemsunziputility>> {
  BackgroundColor #999999
  FontColor #ffffff
  BorderColor #6b6b6b
  roundCorner 20
  shadowing false
}
skinparam person<<User>> {
  BackgroundColor #08427b
  FontColor #ffffff
  BorderColor #052e56
  shadowing false
}
skinparam rectangle<<Application.Application.basicastro>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basicpython>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_node>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.basic_wrangler>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.core>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.docs>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.extractors>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.generators>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.renderers>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application.validators>> {
  BackgroundColor #85bbf0
  FontColor #000000
  BorderColor #5d82a8
  roundCorner 20
  shadowing false
}
skinparam rectangle<<Application.Application>> {
  BorderColor #2e6295
  FontColor #2e6295
  shadowing false
}

person "==User\n<size:10>[Person]</size>\n\nEnd user who runs archlette commands" <<User>> as User
rectangle "==FileSystem\n<size:10>[Software System]</size>\n\nFile system for reading and writing files" <<FileSystem>> as FileSystem
rectangle "==Github Structurizr Repo\n<size:10>[Software System]</size>\n\nThe github repo hosting the Structurizr CLI releases. https://github.com/structurizr/cli/releases/download/v${TOOL_VERSIONS.structurizr}/structurizr-cli.zip" <<GithubStructurizrRepo>> as GithubStructurizrRepo
rectangle "==Github PlantUML Repo\n<size:10>[Software System]</size>\n\nThe github repo hosting the PlantUML CLI releases. https://github.com/plantuml/plantuml/releases/download/v${TOOL_VERSIONS.plantuml}/plantuml-${TOOL_VERSIONS.plantuml}.jar" <<GithubPlantUMLRepo>> as GithubPlantUMLRepo
rectangle "==Local System's unzip utility\n<size:10>[Software System]</size>\n\nThe zip extraction utility on the local system (unzip on Unix, Expand-Archive on Windows)." <<LocalSystemsunziputility>> as LocalSystemsunziputility
rectangle "==File System\n<size:10>[Software System]</size>\n\nThe local file system for caching downloaded tools." <<FileSystem>> as FileSystem

rectangle "Application\n<size:10>[Container: Application]</size>" <<Application.Application>> {
  rectangle "==extractors\n<size:10>[Component: module]</size>\n\nArchletteIR aggregation utilities | Extraction stage of the AAC pipeline" <<Application.Application.extractors>> as Application.Application.extractors
  rectangle "==validators\n<size:10>[Component: module]</size>\n\nValidation stage of the AAC pipeline | Base IR validator for Archlette pipeline" <<Application.Application.validators>> as Application.Application.validators
  rectangle "==generators\n<size:10>[Component: module]</size>\n\nGeneration stage of the AAC pipeline | Structurizr DSL Generator (Template-based)" <<Application.Application.generators>> as Application.Application.generators
  rectangle "==renderers\n<size:10>[Component: module]</size>\n\nRender stage of the AAC pipeline | PlantUML image renderer | Structurizr DSL export renderer" <<Application.Application.renderers>> as Application.Application.renderers
  rectangle "==docs\n<size:10>[Component: module]</size>\n\nDocumentation stage of the AAC pipeline | Markdown documentation generator" <<Application.Application.docs>> as Application.Application.docs
  rectangle "==core\n<size:10>[Component: module]</size>\n\nDynamic ESM module loader | Component inferred from directory: core | Stage module interfaces for the AAC pipeline | Stage module loaders | Tool management for external rendering tools | Architecture-as-Code (AAC) configuration types and schemas | Archlette Intermediate Representation (IR) types and schemas | Core pipeline types" <<Application.Application.core>> as Application.Application.core
  rectangle "==basic-astro\n<size:10>[Component: module]</size>\n\nAstro component extractor" <<Application.Application.basicastro>> as Application.Application.basicastro
  rectangle "==basic_node\n<size:10>[Component: module]</size>\n\nTypeScript/JavaScript code extractor" <<Application.Application.basic_node>> as Application.Application.basic_node
  rectangle "==basic-python\n<size:10>[Component: module]</size>\n\nBasic Python Extractor for Archlette Extracts architecture information from Python source code" <<Application.Application.basicpython>> as Application.Application.basicpython
  rectangle "==basic_wrangler\n<size:10>[Component: module]</size>\n\nCloudflare Wrangler deployment extractor" <<Application.Application.basic_wrangler>> as Application.Application.basic_wrangler
  rectangle "==CLI\n<size:10>[Component: module]</size>\n\nArchlette CLI - Architecture-as-Code toolkit" <<Application.Application.CLI>> as Application.Application.CLI
}

Application.Application.CLI -[#707070,thickness=2]-> Application.Application.extractors : "<color:#707070>Analyzes source code to extract architecture components"
Application.Application.CLI -[#707070,thickness=2]-> Application.Application.validators : "<color:#707070>Validates and enriches intermediate representation"
Application.Application.CLI -[#707070,thickness=2]-> Application.Application.generators : "<color:#707070>Transforms IR into DSL formats"
Application.Application.CLI -[#707070,thickness=2]-> Application.Application.renderers : "<color:#707070>Converts DSL to visual diagrams"
Application.Application.CLI -[#707070,thickness=2]-> Application.Application.core : "<color:#707070>Provides shared utilities, types, and module loading"
Application.Application.extractors -[#707070,thickness=2]-> Application.Application.core : "<color:#707070>Provides IR types, validation schemas, and module loading"
Application.Application.extractors -[#707070,thickness=2]-> Application.Application.basicastro : "<color:#707070>composed of astro extractor"
Application.Application.extractors -[#707070,thickness=2]-> Application.Application.basic_node : "<color:#707070>composed of node extractor"
Application.Application.extractors -[#707070,thickness=2]-> Application.Application.basicpython : "<color:#707070>composed of python extractor"
Application.Application.extractors -[#707070,thickness=2]-> Application.Application.basic_wrangler : "<color:#707070>composed of cloudflare wrangler extractor"
Application.Application.validators -[#707070,thickness=2]-> Application.Application.core : "<color:#707070>Provides IR types, validation schemas, and module loading | zArchletteIR | ArchletteValidator"
Application.Application.generators -[#707070,thickness=2]-> Application.Application.core : "<color:#707070>Provides IR types, path resolution, and module loading | ArchletteIR | Container | Component | CodeItem | Relationship | ResolvedStageNode | VIEW_NAMES | resolveUserContentPath"
Application.Application.renderers -[#707070,thickness=2]-> Application.Application.core : "<color:#707070>Provides types, module loading, and tool management | PipelineContext | findPlantUML | requireJava | resolveArchlettePath | findStructurizrCLI"
Application.Application.docs -[#707070,thickness=2]-> Application.Application.core : "<color:#707070>Provides types, module loading, and path resolution | PipelineContext | Logger | RendererOutput | Component | resolveArchlettePath"
Application.Application.basicastro -[#707070,thickness=2]-> Application.Application.core : "<color:#707070>ResolvedStageNode | ArchletteIR | PipelineContext | IR_VERSION | resolveSecurePath | createLogger | sanitizeId | CodeItem | System | Relationship | Component | Actor | Container | TAGS | DEFAULT_CONTAINER_ID | nameToId"
Application.Application.basic_node -[#707070,thickness=2]-> Application.Application.core : "<color:#707070>ResolvedStageNode | ArchletteIR | PipelineContext | resolveSecurePath | createLogger | sanitizeId | CodeItem | System | Relationship | Component | Actor | TAGS | DEFAULT_CONTAINER_ID | IR_VERSION | nameToId"
Application.Application.basicpython -[#707070,thickness=2]-> Application.Application.core : "<color:#707070>resolveSecurePath | ArchletteExtractor | ArchletteIR | ResolvedStageNode | createLogger | getCliDir | sanitizeId | nameToId | TAGS | DEFAULT_CONTAINER_ID | Actor | Component | Container | CodeItem | Relationship"
Application.Application.basic_wrangler -[#707070,thickness=2]-> Application.Application.core : "<color:#707070>ResolvedStageNode | ArchletteIR | PipelineContext | emptyIR | System | ContainerInstance | Relationship | IR_VERSION | sanitizeId | createLogger"
User -[#707070,thickness=2]-> Application.Application.CLI : "<color:#707070>Interacts with CLI"
Application.Application.core -[#707070,thickness=2]-> FileSystem : "<color:#707070>Uses FileSystem for external system integration"
Application.Application.core -[#707070,thickness=2]-> GithubStructurizrRepo : "<color:#707070>Uses Github Structurizr Repo for external system integration"
Application.Application.core -[#707070,thickness=2]-> GithubPlantUMLRepo : "<color:#707070>Uses Github PlantUML Repo for external system integration"
Application.Application.core -[#707070,thickness=2]-> LocalSystemsunziputility : "<color:#707070>Uses Local System's unzip utility for external system integration"
Application.Application.core -[#707070,thickness=2]-> FileSystem : "<color:#707070>Uses File System for external system integration"
@enduml