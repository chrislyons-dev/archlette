---
/**
 * @component Card
 * Flexible card container for grouping related content
 * 
 * Used as a building block in dashboard layouts and content grids
 * Supports header, body, and footer slots for flexible content projection
 */

interface Props {
  title?: string;
  description?: string;
  elevation?: 'none' | 'low' | 'medium' | 'high';
}

const { title, description, elevation = 'medium' } = Astro.props;

const elevationClasses = {
  none: 'card-elevation-none',
  low: 'card-elevation-low',
  medium: 'card-elevation-medium',
  high: 'card-elevation-high',
};
---

<div class={`card ${elevationClasses[elevation]}`}>
  {
    (title || description) && (
      <div class="card-header">
        {title && <h3 class="card-title">{title}</h3>}
        {description && <p class="card-description">{description}</p>}
      </div>
    )
  }

  <div class="card-body">
    <slot />
  </div>

  <div class="card-footer">
    <slot name="footer" />
  </div>
</div>

<style>
  .card {
    background: white;
    border-radius: 0.5rem;
    overflow: hidden;
  }

  .card-elevation-none {
    border: 1px solid #e0e0e0;
  }

  .card-elevation-low {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .card-elevation-medium {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  .card-elevation-high {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  }

  .card-header {
    padding: 1.5rem;
    border-bottom: 1px solid #e0e0e0;
  }

  .card-title {
    margin: 0 0 0.5rem 0;
    font-size: 1.25rem;
    font-weight: 600;
  }

  .card-description {
    margin: 0;
    font-size: 0.875rem;
    color: #666;
  }

  .card-body {
    padding: 1.5rem;
  }

  .card-footer {
    padding: 1rem 1.5rem;
    background-color: #f9f9f9;
    border-top: 1px solid #e0e0e0;
  }
</style>
